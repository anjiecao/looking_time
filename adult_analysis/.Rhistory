b_variance = 0.2
b_precision = 1/b_variance
b_prior_distribution = rnorm(100,
b_mu,
b_variance)
b_prior = sample(b_prior_distribution, 1)
# signal received after choosing the item
s_mu = 0.8 # unknown true value of item being sampled
s_variance = 0.1 # the amount of noise in each signal
s_precision = 1/s_variance
s_x_distribution = rnorm(100,
s_mu,
s_variance)
s_x = sample(s_x_distribution, 1)
# update the belief after receiving the item
b_new_precision = b_precision + s_precision
b_posterior = ((s_precision * s_x) + (b_precision * b_prior)) / b_new_precision
b_new_precision
b_precision
s_precision
b_posterior
b_prior
update_precision <- function(prior_belief_precision,
signal_precision){
return (prior_belief_precision + signal_precision)
}
update_belief <- function(signal_precision,
signal_value,
belief_precision,
belief_value,
updated_signal_precision){
updated_belief <- ((signal_precision * signal_value) +
(belief_precision * belief_value)) / updated_signal_precision
return (updated_belief)
}
# belief about the item
b_mu = 1
b_variance = 0.2
b_precision = 1/b_variance
b_prior_distribution = rnorm(100,
b_mu,
b_variance)
b_prior = sample(b_prior_distribution, 1)
# signal received after choosing the item
s_mu = 0.8 # unknown true value of item being sampled
s_variance = 0.1 # the amount of noise in each signal
s_precision = 1/s_variance
s_x_distribution = rnorm(100,
s_mu,
s_variance)
s_x = sample(s_x_distribution, 1)
# pretend to have 100 time points
belief_precision_vector <- c(b_precision)
belief_mu_vector <- c(b_mu)
for (i in 1:100){
current_belief_precision = precision_vector[i]
current_belief_mu = mu_vector[i]
updated_belief_precision = update_precision(current_precision,
s_precision)
updated_mu = update_belief(s_precision,
s_x,
current_precision,
current_mu,
updated_precision)
belief_precision_vector <- c(belief_precision_vector, updated_belief_precision)
belief_mu_vector <- updated(belief_mu_vector, updated_mu)
}
# belief about the item
b_mu = 1
b_variance = 0.2
b_precision = 1/b_variance
b_prior_distribution = rnorm(100,
b_mu,
b_variance)
b_prior = sample(b_prior_distribution, 1)
# signal received after choosing the item
s_mu = 0.8 # unknown true value of item being sampled
s_variance = 0.1 # the amount of noise in each signal
s_precision = 1/s_variance
s_x_distribution = rnorm(100,
s_mu,
s_variance)
s_x = sample(s_x_distribution, 1)
# pretend to have 100 time points
belief_precision_vector <- c(b_precision)
belief_mu_vector <- c(b_mu)
for (i in 1:100){
current_belief_precision = belief_precision_vector[i]
current_belief_mu = belief_mu_vector[i]
updated_belief_precision = update_precision(current_precision,
s_precision)
updated_mu = update_belief(s_precision,
s_x,
current_precision,
current_mu,
updated_precision)
belief_precision_vector <- c(belief_precision_vector, updated_belief_precision)
belief_mu_vector <- updated(belief_mu_vector, updated_mu)
}
# belief about the item
b_mu = 1
b_variance = 0.2
b_precision = 1/b_variance
b_prior_distribution = rnorm(100,
b_mu,
b_variance)
b_prior = sample(b_prior_distribution, 1)
# signal received after choosing the item
s_mu = 0.8 # unknown true value of item being sampled
s_variance = 0.1 # the amount of noise in each signal
s_precision = 1/s_variance
s_x_distribution = rnorm(100,
s_mu,
s_variance)
s_x = sample(s_x_distribution, 1)
# pretend to have 100 time points
belief_precision_vector <- c(b_precision)
belief_mu_vector <- c(b_mu)
for (i in 1:100){
current_belief_precision = belief_precision_vector[i]
current_belief_mu = belief_mu_vector[i]
updated_belief_precision = update_precision(current_precision,
s_precision)
updated_mu = update_belief(s_precision,
s_x,
current_belief_precision,
current_belief_mu,
updated_precision)
belief_precision_vector <- c(belief_precision_vector, updated_belief_precision)
belief_mu_vector <- updated(belief_mu_vector, updated_mu)
}
# belief about the item
b_mu = 1
b_variance = 0.2
b_precision = 1/b_variance
b_prior_distribution = rnorm(100,
b_mu,
b_variance)
b_prior = sample(b_prior_distribution, 1)
# signal received after choosing the item
s_mu = 0.8 # unknown true value of item being sampled
s_variance = 0.1 # the amount of noise in each signal
s_precision = 1/s_variance
s_x_distribution = rnorm(100,
s_mu,
s_variance)
s_x = sample(s_x_distribution, 1)
# pretend to have 100 time points
belief_precision_vector <- c(b_precision)
belief_mu_vector <- c(b_mu)
for (i in 1:100){
current_belief_precision = belief_precision_vector[i]
current_belief_mu = belief_mu_vector[i]
updated_belief_precision = update_precision(current_belief_precision,
s_precision)
updated_mu = update_belief(s_precision,
s_x,
current_belief_precision,
current_belief_mu,
updated_precision)
belief_precision_vector <- c(belief_precision_vector, updated_belief_precision)
belief_mu_vector <- updated(belief_mu_vector, updated_mu)
}
update_precision <- function(prior_belief_precision,
signal_precision){
return (prior_belief_precision + signal_precision)
}
update_belief <- function(signal_precision,
signal_value,
belief_precision,
belief_value,
updated_signal_precision){
updated_belief <- ((signal_precision * signal_value) +
(belief_precision * belief_value)) / updated_signal_precision
return (updated_belief)
}
# belief about the item
b_mu = 1
b_variance = 0.2
b_precision = 1/b_variance
b_prior_distribution = rnorm(100,
b_mu,
b_variance)
b_prior = sample(b_prior_distribution, 1)
# signal received after choosing the item
s_mu = 0.8 # unknown true value of item being sampled
s_variance = 0.1 # the amount of noise in each signal
s_precision = 1/s_variance
s_x_distribution = rnorm(100,
s_mu,
s_variance)
s_x = sample(s_x_distribution, 1)
# pretend to have 100 time points
belief_precision_vector <- c(b_precision)
belief_mu_vector <- c(b_mu)
for (i in 1:100){
current_belief_precision = belief_precision_vector[i]
current_belief_mu = belief_mu_vector[i]
updated_belief_precision = update_precision(current_belief_precision,
s_precision)
updated_mu = update_belief(s_precision,
s_x,
current_belief_precision,
current_belief_mu,
updated_precision)
belief_precision_vector <- c(belief_precision_vector, updated_belief_precision)
belief_mu_vector <- updated(belief_mu_vector, updated_mu)
}
# belief about the item
b_mu = 1
b_variance = 0.2
b_precision = 1/b_variance
b_prior_distribution = rnorm(100,
b_mu,
b_variance)
b_prior = sample(b_prior_distribution, 1)
# signal received after choosing the item
s_mu = 0.8 # unknown true value of item being sampled
s_variance = 0.1 # the amount of noise in each signal
s_precision = 1/s_variance
s_x_distribution = rnorm(100,
s_mu,
s_variance)
s_x = sample(s_x_distribution, 1)
# pretend to have 100 time points
belief_precision_vector <- c(b_precision)
belief_mu_vector <- c(b_mu)
for (i in 1:100){
current_belief_precision = belief_precision_vector[i]
current_belief_mu = belief_mu_vector[i]
updated_belief_precision = update_precision(current_belief_precision,
s_precision)
updated_mu = update_belief(s_precision,
s_x,
current_belief_precision,
current_belief_mu,
updated_belief_precision)
belief_precision_vector <- c(belief_precision_vector, updated_belief_precision)
belief_mu_vector <- updated(belief_mu_vector, updated_mu)
}
# belief about the item
b_mu = 1
b_variance = 0.2
b_precision = 1/b_variance
b_prior_distribution = rnorm(100,
b_mu,
b_variance)
b_prior = sample(b_prior_distribution, 1)
# signal received after choosing the item
s_mu = 0.8 # unknown true value of item being sampled
s_variance = 0.1 # the amount of noise in each signal
s_precision = 1/s_variance
s_x_distribution = rnorm(100,
s_mu,
s_variance)
s_x = sample(s_x_distribution, 1)
# pretend to have 100 time points
belief_precision_vector <- c(b_precision)
belief_mu_vector <- c(b_mu)
for (i in 1:100){
current_belief_precision = belief_precision_vector[i]
current_belief_mu = belief_mu_vector[i]
updated_belief_precision = update_precision(current_belief_precision,
s_precision)
updated_mu = update_belief(s_precision,
s_x,
current_belief_precision,
current_belief_mu,
updated_belief_precision)
belief_precision_vector <- c(belief_precision_vector, updated_belief_precision)
belief_mu_vector <- c(belief_mu_vector, updated_mu)
}
belief_mu_vector
belief_precision_vector
# belief about the item
b_mu = 1
b_variance = 0.2
b_precision = 1/b_variance
b_prior_distribution = rnorm(100,
b_mu,
b_variance)
b_prior = sample(b_prior_distribution, 1)
# signal received after choosing the item
s_mu = 2 # unknown true value of item being sampled
s_variance = 0.1 # the amount of noise in each signal
s_precision = 1/s_variance
s_x_distribution = rnorm(100,
s_mu,
s_variance)
s_x = sample(s_x_distribution, 1)
# pretend to have 100 time points
belief_precision_vector <- c(b_precision)
belief_mu_vector <- c(b_mu)
for (i in 1:100){
current_belief_precision = belief_precision_vector[i]
current_belief_mu = belief_mu_vector[i]
updated_belief_precision = update_precision(current_belief_precision,
s_precision)
updated_mu = update_belief(s_precision,
s_x,
current_belief_precision,
current_belief_mu,
updated_belief_precision)
belief_precision_vector <- c(belief_precision_vector, updated_belief_precision)
belief_mu_vector <- c(belief_mu_vector, updated_mu)
}
# belief about the item
b_mu = 1
b_variance = 0.2
b_precision = 1/b_variance
b_prior_distribution = rnorm(100,
b_mu,
b_variance)
b_prior = sample(b_prior_distribution, 1)
# signal received after choosing the item
s_mu = 2 # unknown true value of item being sampled
s_variance = 0.1 # the amount of noise in each signal
s_precision = 1/s_variance
s_x_distribution = rnorm(100,
s_mu,
s_variance)
s_x = sample(s_x_distribution, 1)
# pretend to have 100 time points
belief_precision_vector <- c(b_precision)
belief_mu_vector <- c(b_mu)
for (i in 1:100){
current_belief_precision = belief_precision_vector[i]
current_belief_mu = belief_mu_vector[i]
updated_belief_precision = update_precision(current_belief_precision,
s_precision)
updated_mu = update_belief(s_precision,
s_x,
current_belief_precision,
current_belief_mu,
updated_belief_precision)
belief_precision_vector <- c(belief_precision_vector, updated_belief_precision)
belief_mu_vector <- c(belief_mu_vector, updated_mu)
}
belief_mu_vector
# belief about the item
b_mu = 1
b_variance = 0.2
b_precision = 1/b_variance
b_prior_distribution = rnorm(100,
b_mu,
b_variance)
b_prior = sample(b_prior_distribution, 1)
# signal received after choosing the item
s_mu = 8 # unknown true value of item being sampled
s_variance = 0.1 # the amount of noise in each signal
s_precision = 1/s_variance
s_x_distribution = rnorm(100,
s_mu,
s_variance)
s_x = sample(s_x_distribution, 1)
# pretend to have 100 time points
belief_precision_vector <- c(b_precision)
belief_mu_vector <- c(b_mu)
for (i in 1:100){
current_belief_precision = belief_precision_vector[i]
current_belief_mu = belief_mu_vector[i]
updated_belief_precision = update_precision(current_belief_precision,
s_precision)
updated_mu = update_belief(s_precision,
s_x,
current_belief_precision,
current_belief_mu,
updated_belief_precision)
belief_precision_vector <- c(belief_precision_vector, updated_belief_precision)
belief_mu_vector <- c(belief_mu_vector, updated_mu)
}
belief_mu_vector
# belief about the item
b_mu = 5
b_variance = 0.2
b_precision = 1/b_variance
b_prior_distribution = rnorm(100,
b_mu,
b_variance)
b_prior = sample(b_prior_distribution, 1)
# signal received after choosing the item
s_mu = 8 # unknown true value of item being sampled
s_variance = 0.1 # the amount of noise in each signal
s_precision = 1/s_variance
s_x_distribution = rnorm(100,
s_mu,
s_variance)
s_x = sample(s_x_distribution, 1)
# pretend to have 100 time points
belief_precision_vector <- c(b_precision)
belief_mu_vector <- c(b_mu)
for (i in 1:100){
current_belief_precision = belief_precision_vector[i]
current_belief_mu = belief_mu_vector[i]
updated_belief_precision = update_precision(current_belief_precision,
s_precision)
updated_mu = update_belief(s_precision,
s_x,
current_belief_precision,
current_belief_mu,
updated_belief_precision)
belief_precision_vector <- c(belief_precision_vector, updated_belief_precision)
belief_mu_vector <- c(belief_mu_vector, updated_mu)
}
belief_mu_vector
# belief about the item
b_mu = .2
b_variance = 0.2
b_precision = 1/b_variance
b_prior_distribution = rnorm(100,
b_mu,
b_variance)
b_prior = sample(b_prior_distribution, 1)
# signal received after choosing the item
s_mu = 8 # unknown true value of item being sampled
s_variance = 0.1 # the amount of noise in each signal
s_precision = 1/s_variance
s_x_distribution = rnorm(100,
s_mu,
s_variance)
s_x = sample(s_x_distribution, 1)
# pretend to have 100 time points
belief_precision_vector <- c(b_precision)
belief_mu_vector <- c(b_mu)
for (i in 1:100){
current_belief_precision = belief_precision_vector[i]
current_belief_mu = belief_mu_vector[i]
updated_belief_precision = update_precision(current_belief_precision,
s_precision)
updated_mu = update_belief(s_precision,
s_x,
current_belief_precision,
current_belief_mu,
updated_belief_precision)
belief_precision_vector <- c(belief_precision_vector, updated_belief_precision)
belief_mu_vector <- c(belief_mu_vector, updated_mu)
}
belief_mu_vector
# belief about the item
b_mu = .2
b_variance = 0.2
b_precision = 1/b_variance
b_prior_distribution = rnorm(100,
b_mu,
b_variance)
b_prior = sample(b_prior_distribution, 1)
# signal received after choosing the item
s_mu = 5 # unknown true value of item being sampled
s_variance = 0.1 # the amount of noise in each signal
s_precision = 1/s_variance
s_x_distribution = rnorm(100,
s_mu,
s_variance)
s_x = sample(s_x_distribution, 1)
# pretend to have 100 time points
belief_precision_vector <- c(b_precision)
belief_mu_vector <- c(b_mu)
for (i in 1:100){
current_belief_precision = belief_precision_vector[i]
current_belief_mu = belief_mu_vector[i]
updated_belief_precision = update_precision(current_belief_precision,
s_precision)
updated_mu = update_belief(s_precision,
s_x,
current_belief_precision,
current_belief_mu,
updated_belief_precision)
belief_precision_vector <- c(belief_precision_vector, updated_belief_precision)
belief_mu_vector <- c(belief_mu_vector, updated_mu)
}
belief_mu_vector
# belief about the item
b_mu = .2
b_variance = 0.2
b_precision = 1/b_variance
b_prior_distribution = rnorm(100,
b_mu,
b_variance)
b_prior = sample(b_prior_distribution, 1)
# signal received after choosing the item
s_mu = 5 # unknown true value of item being sampled
s_variance = 0.1 # the amount of noise in each signal
s_precision = 1/s_variance
s_x_distribution = rnorm(100,
s_mu,
s_variance)
s_x = sample(s_x_distribution, 1)
# pretend to have 100 time points
belief_precision_vector <- c(b_precision)
belief_mu_vector <- c(b_mu)
for (i in 1:100){
current_belief_precision = belief_precision_vector[i]
current_belief_mu = belief_mu_vector[i]
updated_belief_precision = update_precision(current_belief_precision,
s_precision)
updated_mu = update_belief(s_precision,
s_x,
current_belief_precision,
current_belief_mu,
updated_belief_precision)
belief_precision_vector <- c(belief_precision_vector, updated_belief_precision)
belief_mu_vector <- c(belief_mu_vector, updated_mu)
}
tibble("time_point" = seq(1, 101, 1),
"belief" = belief_mu_vector,
"precision" = belief_precision_vector,
)
library(here)
library(tidyverse)
library(BayesFactor)
library(brms)
d <- read_csv(here("main/cogsci_data/tidy_main.csv"))
