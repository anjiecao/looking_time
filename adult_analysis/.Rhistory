select(item_id, mean) %>%
rename(log_mean_dishab = mean) %>%
left_join(c_temp, by = item_id)
c_temp <- complexity_temp %>%
select(item_id, complexity, mean) %>%
rename(mean_rating = mean)
log_rt_deviant %>%
select(item_id, mean) %>%
rename(log_mean_dishab = mean) %>%
left_join(c_temp, by = "item_id")
c_temp <- complexity_temp %>%
select(item_id, complexity, mean) %>%
rename(mean_rating = mean)
log_rt_deviant %>%
select(item_id, mean) %>%
rename(log_mean_dishab = mean) %>%
left_join(c_temp, by = "item_id") %>%
ggplot(aes(x = mean_rating, y = log_mean_dishab,
color = complexity))
c_temp <- complexity_temp %>%
select(item_id, complexity, mean) %>%
rename(mean_rating = mean)
log_rt_deviant %>%
select(item_id, mean) %>%
rename(log_mean_dishab = mean) %>%
left_join(c_temp, by = "item_id") %>%
ggplot(aes(x = mean_rating, y = log_mean_dishab,
color = complexity)) +
geom_point()
c_temp <- complexity_temp %>%
select(item_id, complexity, mean) %>%
rename(mean_rating = mean)
log_rt_deviant %>%
select(item_id, mean) %>%
rename(log_mean_dishab = mean) %>%
left_join(c_temp, by = "item_id") %>%
ggplot(aes(x = mean_rating, y = log_mean_dishab,
color = complexity)) +
geom_point() +
facet_wrap(~complexity)
c_temp <- complexity_temp %>%
select(item_id, complexity, mean) %>%
rename(mean_rating = mean)
log_rt_deviant %>%
select(item_id, mean) %>%
rename(log_mean_dishab = mean) %>%
left_join(c_temp, by = "item_id") %>%
ggplot(aes(x = mean_rating, y = log_mean_dishab,
color = complexity)) +
geom_point()
log_rt_deviant %>%
filter(complexity == "complex") %>%
select(item_id, mean) %>%
rename(log_mean_dishab = mean) %>%
left_join(c_temp, by = "item_id") %>%
ggplot(aes(x = mean_rating, y = log_mean_dishab,
color = complexity)) +
geom_point()
log_rt_deviant %>%
filter(complexity == "complex") %>%
select(item_id, mean) %>%
rename(log_mean_dishab = mean) %>%
left_join(c_temp, by = "item_id") %>%
ggplot(aes(x = mean_rating, y = log_mean_dishab,
color = complexity)) +
geom_point() +
geom_smooth(method = "lm")
log_rt_deviant %>%
filter(complexity == "simple") %>%
select(item_id, mean) %>%
rename(log_mean_dishab = mean) %>%
left_join(c_temp, by = "item_id") %>%
ggplot(aes(x = mean_rating, y = log_mean_dishab,
color = complexity)) +
geom_point() +
geom_smooth(method = "lm")
View(RT_data)
View(log_rt_deviant)
log_rt_deviant <- RT_data %>%
filter(trial_type == "deviant") %>%
group_by(item_id, half) %>%
tidyboot::tidyboot_mean(log(rt)) %>%
mutate(type = "log_rt",
complexity = case_when(
grepl("complex", item_id) ~ "complex",
TRUE ~ "simple")
)
complexity_temp <- complexity_summary %>%
mutate(type = "rating") %>%
mutate(item_id = item_id_no_action) %>%
select(-item_id_no_action)
dishab_df <- bind_rows(log_rt_deviant,
complexity_temp)
dishab_df
dishab_df %>%
ggplot(aes(x = reorder(item_id, mean), y = mean,
color = complexity,
shape = type)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(1.5)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) %>%
facet_wrap(~half)
dishab_df %>%
ggplot(aes(x = reorder(item_id, mean), y = mean,
color = complexity,
shape = type)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(1.5)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
facet_wrap(~half)
c_temp <- complexity_temp %>%
select(item_id, complexity, mean, half) %>%
rename(mean_rating = mean)
c_temp <- complexity_temp %>%
select(item_id, complexity, mean) %>%
rename(mean_rating = mean)
log_rt_deviant %>%
select(item_id, mean, half) %>%
rename(log_mean_dishab = mean) %>%
left_join(c_temp, by = "item_id") %>%
ggplot(aes(x = mean_rating, y = log_mean_dishab,
color = complexity)) +
geom_point()
c_temp <- complexity_temp %>%
select(item_id, complexity, mean) %>%
rename(mean_rating = mean)
log_rt_deviant %>%
select(item_id, mean, half) %>%
rename(log_mean_dishab = mean) %>%
left_join(c_temp, by = "item_id") %>%
ggplot(aes(x = mean_rating, y = log_mean_dishab,
color = complexity)) +
geom_point() +
facet_wrap(~half)
similarity_data
similarity_data %>%
mutate(
stimulus_left_id =  str_match(stimulus_left, "spore_stims/\\s*(.*?)..\\s*.gif")[,2],
stimulus_right_id = str_match(stimulus_right, "spore_stims/\\s*(.*?)..\\s*.gif")[,2],
)
)
similarity_data %>%
mutate(
stimulus_left_id =  str_match(stimulus_left, "spore_stims/\\s*(.*?)..\\s*.gif")[,2],
stimulus_right_id = str_match(stimulus_right, "spore_stims/\\s*(.*?)..\\s*.gif")[,2],
)
similarity_data %>%
mutate(
stimulus_left_id =  str_match(stimulus_left, "spore_stims/\\s*(.*?)..\\s*.gif")[,2],
stimulus_right_id = str_match(stimulus_right, "spore_stims/\\s*(.*?)..\\s*.gif")[,2],
) %>%
group_by(stimulus_left) %>%
count()
similarity_data %>%
mutate(
stimulus_left_id =  str_match(stimulus_left, "spore_stims/\\s*(.*?)..\\s*.gif")[,2],
stimulus_right_id = str_match(stimulus_right, "spore_stims/\\s*(.*?)..\\s*.gif")[,2],
) %>%
similarity_data %>%
mutate(
stimulus_left_id =  str_match(stimulus_left, "spore_stims/\\s*(.*?)..\\s*.gif")[,2],
stimulus_right_id = str_match(stimulus_right, "spore_stims/\\s*(.*?)..\\s*.gif")[,2],
)
similarity_data %>%
mutate(
stimulus_left_id =  str_match(stimulus_left, "spore_stims/\\s*(.*?)..\\s*.gif")[,2],
stimulus_right_id = str_match(stimulus_right, "spore_stims/\\s*(.*?)..\\s*.gif")[,2],
) %>%
group_by(stimulus_left_id, similarity) %>%
tidyboot::tidyboot_mean(rating)
similarity_data %>%
mutate(
stimulus_left_id =  str_match(stimulus_left, "spore_stims/\\s*(.*?)..\\s*.gif")[,2],
stimulus_right_id = str_match(stimulus_right, "spore_stims/\\s*(.*?)..\\s*.gif")[,2],
) %>%
group_by(stimulus_left_id, similarity) %>%
tidyboot::tidyboot_mean(rating) %>%
ggplot(aes(x = reorder(item_id, mean), y = mean,
color = complexity,
shape = type)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(1.5)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
similarity_data %>%
mutate(
stimulus_left_id =  str_match(stimulus_left, "spore_stims/\\s*(.*?)..\\s*.gif")[,2],
stimulus_right_id = str_match(stimulus_right, "spore_stims/\\s*(.*?)..\\s*.gif")[,2],
) %>%
group_by(stimulus_left_id, similarity) %>%
tidyboot::tidyboot_mean(rating) %>%
ggplot(aes(x = reorder(stimulus_left_id, mean), y = mean,
color = complexity,
shape = type)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(1.5)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
similarity_data %>%
mutate(
stimulus_left_id =  str_match(stimulus_left, "spore_stims/\\s*(.*?)..\\s*.gif")[,2],
stimulus_right_id = str_match(stimulus_right, "spore_stims/\\s*(.*?)..\\s*.gif")[,2],
) %>%
group_by(stimulus_left_id, similarity) %>%
tidyboot::tidyboot_mean(rating) %>%
ggplot(aes(x = reorder(stimulus_left_id, mean), y = mean,
color = similarity,
shape = type)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(1.5)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
similarity_data %>%
mutate(
stimulus_left_id =  str_match(stimulus_left, "spore_stims/\\s*(.*?)..\\s*.gif")[,2],
stimulus_right_id = str_match(stimulus_right, "spore_stims/\\s*(.*?)..\\s*.gif")[,2],
) %>%
group_by(stimulus_left_id, similarity) %>%
tidyboot::tidyboot_mean(rating) %>%
ggplot(aes(x = reorder(stimulus_left_id, mean), y = mean,
color = similarity)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(1.5)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
similarity_data %>%
mutate(
stimulus_left_id =  str_match(stimulus_left, "spore_stims/\\s*(.*?)..\\s*.gif")[,2],
stimulus_right_id = str_match(stimulus_right, "spore_stims/\\s*(.*?)..\\s*.gif")[,2],
) %>%
group_by(stimulus_left_id, similarity) %>%
tidyboot::tidyboot_mean(rating) %>%
ggplot(aes(x = reorder(stimulus_left_id, mean), y = mean,
color = similarity)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
similarity_data %>%
mutate(
stimulus_left_id =  str_match(stimulus_left, "spore_stims/\\s*(.*?)..\\s*.gif")[,2],
stimulus_right_id = str_match(stimulus_right, "spore_stims/\\s*(.*?)..\\s*.gif")[,2],
) %>%
group_by(stimulus_left_id, similarity) %>%
tidyboot::tidyboot_mean(rating) %>%
ggplot(aes(x = reorder(stimulus_left_id, mean), y = mean,
color = similarity)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
similarity
similarity_df
RT_data
RT_data %>%
group_by(subject, block_number, block_type, trial_type) %>%
distinct(subject, block_number, block_type, trial_type)
RT_data %>%
group_by(subject, block_number, block_type, trial_type) %>%
summarise(rt = mean(log(rt)))
distinct(subject, block_number, block_type, trial_type)
?distinct
RT_data %>%
group_by(subject, block_number, block_type, trial_type, item_id) %>%
summarise(log_rt = mean(log(rt))) %>%
distinct(subject, block_number, block_type, trial_type)
RT_data %>%
group_by(subject, block_number, block_type, trial_type, item_id) %>%
summarise(log_rt = mean(log(rt)))
RT_data %>%
group_by(subject, block_number, block_type, trial_type, item_id) %>%
summarise(log_rt = mean(log(rt))) %>%
distinct(subject, block_number, block_type, trial_type, item_id)
RT_data %>%
group_by(subject, block_number, block_type, trial_type, item_id) %>%
summarise(log_rt = mean(log(rt)))
RT_data %>%
group_by(subject, block_number, block_type, trial_type, item_id) %>%
summarise(log_rt = mean(log(rt))) %>%
pivot_wider(names_from = item_id,
values_from = log_rt)
RT_data %>%
group_by(subject, block_number, block_type, trial_type, item_id) %>%
summarise(log_rt = mean(log(rt))) %>%
select(subject, item_id, log_rt) %>%
pivot_wider(names_from = item_id,
values_from = log_rt)
library(here)
library(tidyverse)
library(cowplot)
library(here)
source(here("scripts/poli_model.R"))
example_seq <- c(1,1,1,1,1,1,2,1)
poli_model_pokebaby(8, example_seq)
source('~/Desktop/projects/looking_time/adult_analysis/scripts/poli_model.R', echo=TRUE)
example_seq <- c(1,1,1,1,1,1,2,1)
poli_model_pokebaby(8, example_seq)
library(tidyverse)
library(cowplot)
library(here)
source(here("scripts/poli_model.R"))
example_seq <- c(1,1,1,1,1,1,2,1)
poli_model_pokebaby(8, example_seq)
example_seq <- c(1,1,1,1,1,1,2,1)
poli_model_pokebaby(example_seq)
source('~/Desktop/projects/looking_time/adult_analysis/scripts/poli_model.R', echo=TRUE)
example_seq <- c(1,1,1,1,1,1,2,1)
poli_model_pokebaby(example_seq)
seq <- c(1,1,1,1,1,1,2,1)
model <- tibble(trials = 0:length(seq),
bin1 = 0,
bin2 = 0,
bin3 = 0)
prior <- c(1,1,1)
model[1,2:4] <- as.list(prior)
# updating prior
for (i in 1:length(seq)) {
model[model$trials == i, 2:4] <- model[model$trials == i-1, 2:4]
model[model$trials == i, seq[i]+1] <-
model[model$trials == i-1, seq[i]+1] + 1
}
model %<>%
rowwise() %>%
mutate(total = sum(bin1 + bin2 + bin3),
p1 = bin1 / total,
p2 = bin2 / total,
p3 = bin3 / total)
model$observed <- c(NA, seq)
model$surprisal <- NA_real_
for (i in 1:length(seq)){
curr_bin = seq[i]
curr_bin_column = paste0("p", curr_bin)
prev_probabiliy = model %>%
filter(trials == i-1) %>%
select(curr_bin_column) %>%
pull()
curr_suprirsal = -log2(prev_probabiliy)
model[model$trials == i, ]$surprisal <- curr_suprirsal
}
model$predictability <- NA_real_
for (i in 1:(n+1)){
current_trial_predict = model %>%
filter(trials == i) %>%
select(p1,p2,p3) %>%
pivot_longer(p1:p3, names_to = "prob") %>%
mutate(log2_value = log2(value),
product = value * log2_value) %>%
summarise(sum(product)) %>%
pull()
model[model$trials == i, ]$predictability <- current_trial_predict
}
n <- length(seq)
model <- tibble(trials = 0:length(seq),
bin1 = 0,
bin2 = 0,
bin3 = 0)
prior <- c(1,1,1)
model[1,2:4] <- as.list(prior)
# updating prior
for (i in 1:length(seq)) {
model[model$trials == i, 2:4] <- model[model$trials == i-1, 2:4]
model[model$trials == i, seq[i]+1] <-
model[model$trials == i-1, seq[i]+1] + 1
}
# calculating probability
model %<>%
rowwise() %>%
mutate(total = sum(bin1 + bin2 + bin3),
p1 = bin1 / total,
p2 = bin2 / total,
p3 = bin3 / total)
model$observed <- c(NA, seq)
# calculating surprisal
model$surprisal <- NA_real_
for (i in 1:length(seq)){
curr_bin = seq[i]
curr_bin_column = paste0("p", curr_bin)
prev_probabiliy = model %>%
filter(trials == i-1) %>%
select(curr_bin_column) %>%
pull()
curr_suprirsal = -log2(prev_probabiliy)
model[model$trials == i, ]$surprisal <- curr_suprirsal
}
# calculating predictability
model$predictability <- NA_real_
for (i in 1:(n+1)){
current_trial_predict = model %>%
filter(trials == i) %>%
select(p1,p2,p3) %>%
pivot_longer(p1:p3, names_to = "prob") %>%
mutate(log2_value = log2(value),
product = value * log2_value) %>%
summarise(sum(product)) %>%
pull()
model[model$trials == i, ]$predictability <- current_trial_predict
}
# calculating learning progress
model$learning_progress <- NA_real_
for (i in 1:(n+1)){
#i = 1
previous_trial_prob <- model %>%
filter(trials == i-1) %>%
select(p1:p3) %>%
rename(bin1 = p1, bin2 = p2, bin3 = p3) %>%
pivot_longer(bin1:bin3, names_to = "bin", values_to = "prev_prob")
current_trial_prob <- model %>%
filter(trials == i) %>%
select(p1:p3) %>%
rename(bin1 = p1, bin2 = p2, bin3 = p3) %>%
pivot_longer(bin1:bin3, names_to = "bin", values_to = "curr_prob")
trial_bin = left_join(previous_trial_prob,
current_trial_prob,
by = "bin")
d_bin = trial_bin %>%
mutate(d_bin = curr_prob * log2(curr_prob/prev_prob)) %>%
summarise(sum(d_bin)) %>%
pull()
model[model$trials == i, ]$learning_progress <- d_bin
}
source('~/Desktop/projects/looking_time/adult_analysis/scripts/poli_model.R', echo=TRUE)
example_seq <- c(1,1,1,1,1,1,2,1)
poli_model_pokebaby(example_seq)
poli_model_plot(single_block)
example_seq <- c(1,1,1,1,1,1,2,1)
single_block <- poli_model_pokebaby(example_seq)
example_seq <- c(1,1,1,1,1,1,2,1)
single_block <- poli_model_pokebaby(example_seq)
single_block
poli_model_plot(single_block)
library(tidyverse)
library(patchwork)
library(here)
source(here("scripts/poli_model.R"))
example_seq <- c(1,1,1,1,1,1,2,1)
single_block <- poli_model_pokebaby(example_seq)
single_block
poli_model_plot(single_block)
?sample_int
install.packages("sample")
NUM_BLOCK = 20
raster::sampleInt(3, 8, replace = TRUE)
NUM_BLOCK = 20
sample(1:3, 1)
NUM_BLOCK = 20
for (i in 1:20){
sample(1:3, 1)
}
NUM_BLOCK = 20
for (i in 1:20){
p <- sample(1:3, 1)
p
}
NUM_BLOCK = 20
for (i in 1:20){
p <- sample(1:3, 1)
}
p
deviant <- setdiff(c(background), c(1,2,3))
background <- sample(1:3, 1)
deviant <- setdiff(c(background), c(1,2,3))
NUM_BLOCK = 20
for (i in 1:20){
background <- sample(1:3, 1)
deviant <- setdiff(c(background), c(1,2,3))
}
p
deviant
NUM_BLOCK = 20
for (i in 1:20){
background <- sample(1:3, 1)
deviant <- setdiff(c(background), c(1,2,3))
}
background
deviant
NUM_BLOCK = 20
for (i in 1:20){
block_pair <- sample(1:3, 2, replace=F)
}
block_pair
background
deviant
background <- block_pair[0]
background
background <- block_pair[1]
background
rep(background, 7)
sample(DEVIANT_POSITIONS, 1)
DEVIANT_POSITIONS = c(3,4,5,6,7,8)
sample(DEVIANT_POSITIONS, 1)
block_pair <- sample(1:3, 2, replace=F)
background <- block_pair[1]
deviant <- block_pair[2]
# fill the sequence with the background
block_seq <- rep(background, 8)
# randomly sample from the deviant position
location <- sample(DEVIANT_POSITIONS, 1)
block_seq[location] <- deviant
block_seq
NUM_BLOCK = 20
DEVIANT_POSITIONS = c(3,4,5,6,7,8)
ALL_BLOCKS <- c()
for (i in 1:NUM_BLOCK){
block_pair <- sample(1:3, 2, replace=F)
background <- block_pair[1]
deviant <- block_pair[2]
# fill the sequence with the background
block_seq <- rep(background, 8)
# randomly sample from the deviant position
location <- sample(DEVIANT_POSITIONS, 1)
block_seq[location] <- deviant
ALL_BLOCKS <- c(ALL_BLOCKS, block_seq)
}
ALL_BLOCKS
twenty_blocks <- poli_model_pokebaby(ALL_BLOCKS)
all_blocks_model <- poli_model_pokebaby(ALL_BLOCKS)
poli_model_plot(all_blocks_model)
source('~/Desktop/projects/looking_time/adult_analysis/scripts/poli_model.R', echo=TRUE)
all_blocks_model <- poli_model_pokebaby(ALL_BLOCKS)
poli_model_plot(all_blocks_model)
