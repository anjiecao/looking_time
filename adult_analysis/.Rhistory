geom_smooth(method = "lm",
formula = y ~ I(exp(1)**(-x)), se = FALSE)
ggplot(rt %>% mutate(block_number = block_number + 1),
aes(x=as.factor(block_number), y=looking_time, colour=trial_complexity)) +
stat_summary(fun.data = "mean_cl_boot", position = position_dodge(width = .2)) +
geom_smooth(method = "lm",
formula = y ~ I(exp(1)**(-x)), se = FALSE) +
facet_grid(~platform)+
langcog::scale_color_solarized(name = "Item Type") +
theme(legend.position = "bottom") +
ylab("Looking time (ms)") +
xlab("Trial Number")
ggplot(rt %>% mutate(block_number = block_number + 1),
aes(x=as.factor(block_number), y=looking_time, colour=trial_complexity)) +
stat_summary(fun.data = "mean_cl_boot", position = position_dodge(width = .2)) +
geom_smooth(method = "lm",
formula = y ~ I(exp(1)**(-x)), se = FALSE) +
facet_grid(~platform)+
langcog::scale_color_solarized(name = "Trial Complexity") +
theme(legend.position = "bottom") +
ylab("Looking time (ms)") +
xlab("Block Number")
ggplot(rt,
aes(x=trial_number, y=looking_time, colour=item_type)) +
stat_summary(fun.data = "mean_cl_boot", position = position_dodge(width = .2)) +
geom_smooth(method = "lm",
formula = y ~ I(exp(1)**(-x)), se = FALSE) +
#facet_wrap(~platform) +
facet_grid(exposure_type ~ platform) +
langcog::scale_color_solarized(name = "Item Type") +
theme(legend.position = "bottom") +
ylab("looking time (ms)") +
xlab("Trial Number") +
labs(title = "Looking time change (first trial forced)")
ggplot(rt,
aes(x=trial_number, y=log(looking_time), colour=item_type)) +
stat_summary(fun.data = "mean_cl_boot", position = position_dodge(width = .2)) +
geom_smooth(method = "lm",
formula = y ~ I(exp(1)**(-x)), se = FALSE) +
#facet_wrap(~platform) +
facet_grid(exposure_type ~ platform) +
langcog::scale_color_solarized(name = "Item Type") +
theme(legend.position = "bottom") +
ylab("log looking time (ms)") +
xlab("Trial Number") +
labs(title = "Log looking time change")
demog %>%
ggplot(aes(x = age, fill = platform)) +
geom_density(alpha = .5)
rt %>%
filter(platform == "prolific") %>%
filter(trial_number = 1) %>%
group_by(exposure_type)
rt %>%
filter(platform == "prolific") %>%
filter(trial_number = 1) %>%
ggplot(aes(x = exposure_type, y = rt)) +
stat_summary(fun.data = "mean_cl_boot")
rt %>%
filter(platform == "prolific") %>%
filter(trial_number == 1) %>%
ggplot(aes(x = exposure_type, y = rt)) +
stat_summary(fun.data = "mean_cl_boot")
rt %>%
filter(platform == "prolific") %>%
filter(trial_number == 1) %>%
ggplot(aes(x = exposure_type, y = rt)) +
stat_summary(fun.data = "mean_cl_boot") +
ylim(0, 20000)
rt %>%
filter(platform == "prolific") %>%
filter(trial_number == 1) %>%
ggplot(aes(x = exposure_type, y = rt)) +
stat_summary(fun.data = "mean_cl_boot") +
ylim(0, 20000) +
labs(title = "First trial reaction time")
rt %>%
filter(platform == "prolific") %>%
filter(trial_number == 1) %>%
ggplot(aes(x = exposure_type, y = rt)) +
stat_summary(fun.data = "mean_cl_boot") +
geom_hline(yintercept = 500) +
geom_hline(yintercept = 20000) +
ylim(0, 20000) +
labs(title = "First trial reaction time")
rt %>%
filter(platform == "prolific") %>%
filter(trial_number == 2) %>%
ggplot(aes(x = exposure_type, y = looking_time)) +
stat_summary(fun.data = "mean_cl_boot") +
geom_hline(yintercept = 500) +
geom_hline(yintercept = 20000) +
ylim(0, 20000) +
labs(title = "First trial reaction time")
rt %>%
filter(platform == "prolific") %>%
filter(trial_number == 2) %>%
ggplot(aes(x = exposure_type, y = looking_time)) +
stat_summary(fun.data = "mean_cl_boot") +
geom_hline(yintercept = 500) +
geom_hline(yintercept = 20000) +
ylim(0, 20000) +
labs(title = "Second trial looking time")
rt %>%
filter(platform == "prolific") %>%
filter(block_number == 0) %>%
ggplot(aes(x = trial_number,
y = looking_time,
color = item_type)) +
stat_summary(position = position_dodge(width = 0.1))  +
stat_summary(geom = "line") +
xlab("Block") +
ylab("Looking time") +
labs(title = "Looking time at self-paced blocks at first self-paced trial")
#facet_wrap(~exposure_type)
rt %>%
filter(platform == "prolific") %>%
filter(block_number == 0) %>%
ggplot(aes(x = trial_number,
y = looking_time,
color = item_type)) +
stat_summary(position = position_dodge(width = 0.1))  +
stat_summary(geom = "line") +
xlab("trial") +
ylab("Looking time") +
labs(title = "Looking time at first blocks across trials")
#facet_wrap(~exposure_type)
rt %>%
filter(platform == "prolific") %>%
filter(block_number == 0) %>%
ggplot(aes(x = trial_number,
y = looking_time,
color = item_type)) +
stat_summary(position = position_dodge(width = 0.1))  +
stat_summary(geom = "line") +
xlab("trial") +
ylab("Looking time") +
labs(title = "Looking time at the first block across trials")
#facet_wrap(~exposure_type)
rt %>%
filter(platform == "prolific") %>%
filter(block_number == 0) %>%
ggplot(aes(x = trial_number,
y = looking_time,
color = item_type)) +
stat_summary(position = position_dodge(width = 0.1))  +
stat_summary(geom = "line") +
xlab("trial") +
ylab("Looking time") +
labs(title = "Looking time at the first block across trials")
#facet_wrap(~exposure_type)
rt %>%
filter(platform == "prolific") %>%
filter(block_number == 1) %>%
ggplot(aes(x = trial_number,
y = looking_time,
color = item_type)) +
stat_summary(position = position_dodge(width = 0.1))  +
stat_summary(geom = "line") +
xlab("trial") +
ylab("Looking time") +
labs(title = "Looking time at the first block across trials")
#facet_wrap(~exposure_type)
rt %>%
filter(platform == "prolific") %>%
filter(block_number == 0) %>%
ggplot(aes(x = trial_number,
y = looking_time,
color = item_type)) +
stat_summary(position = position_dodge(width = 0.1))  +
stat_summary(geom = "line") +
xlab("trial") +
ylab("Looking time") +
labs(title = "Looking time at the first block across trials")
#facet_wrap(~exposure_type)
rt %>%
filter(platform == "prolific") %>%
filter(block_number == 1) %>%
ggplot(aes(x = trial_number,
y = looking_time,
color = item_type)) +
stat_summary(position = position_dodge(width = 0.1))  +
stat_summary(geom = "line") +
xlab("trial") +
ylab("Looking time") +
labs(title = "Looking time at the second block across trials")
#facet_wrap(~exposure_type)
rt %>%
filter(platform == "prolific") %>%
filter(block_number == 0) %>%
ggplot(aes(x = trial_number,
y = looking_time,
color = item_type)) +
stat_summary(position = position_dodge(width = 0.1))  +
stat_summary(geom = "line") +
xlab("trial") +
ylab("Looking time") +
labs(title = "Looking time at the first block across trials")
#facet_wrap(~exposure_type)
rt %>%
filter(platform == "prolific") %>%
filter(block_number == 1) %>%
ggplot(aes(x = trial_number,
y = looking_time,
color = item_type)) +
stat_summary(position = position_dodge(width = 0.1))  +
stat_summary(geom = "line") +
xlab("trial") +
ylab("Looking time") +
labs(title = "Looking time at the second block across trials")
#facet_wrap(~exposure_type)
rt %>%
filter(platform == "prolific") %>%
filter(trial_number == 1) %>%
filter(exposure_type == "self_paced") %>%
ggplot(aes(x = block_number,
y = looking_time,
color = item_type)) +
stat_summary(position = position_dodge(width = 0.1))  +
stat_summary(geom = "line") +
xlab("block") +
ylab("Looking time") +
labs(title = "Looking time at the first trial on self-paced blocks across blocks")
#facet_wrap(~exposure_type)
d
library(tidyverse)
library(here)
source(here("scripts/R_rainclouds.R"))
library(tidyverse)
?pbinomal
pbinom
?pbinom
Y_i = pbinom(1, 1, 0.5, lower.tail = TRUE, log.p = FALSE)
Y_i = pbinom(1, 1, 0.5, lower.tail = TRUE, log.p = FALSE)
plot(Y_i)
dbeta(1, 1, 1)
dbeta(1, 2, 1)
dbeta(1, 3, 1)
dbeta(1, 4, 1)
?dbeta
rbeta(1, 4, 1)
pbeta(1, 4, 1)
pbeta(c(0.5,1), 4, 1)
x <- seq(0, 1, length.out = 21)
dbeta(x, 1, 1)
pbeta(x, 1, 1)
## Visualization, including limit cases:
pl.beta <- function(a,b, asp = if(isLim) 1, ylim = if(isLim) c(0,1.1)) {
if(isLim <- a == 0 || b == 0 || a == Inf || b == Inf) {
eps <- 1e-10
x <- c(0, eps, (1:7)/16, 1/2+c(-eps,0,eps), (9:15)/16, 1-eps, 1)
} else {
x <- seq(0, 1, length.out = 1025)
}
fx <- cbind(dbeta(x, a,b), pbeta(x, a,b), qbeta(x, a,b))
f <- fx; f[fx == Inf] <- 1e100
matplot(x, f, ylab="", type="l", ylim=ylim, asp=asp,
main = sprintf("[dpq]beta(x, a=%g, b=%g)", a,b))
abline(0,1,     col="gray", lty=3)
abline(h = 0:1, col="gray", lty=3)
legend("top", paste0(c("d","p","q"), "beta(x, a,b)"),
col=1:3, lty=1:3, bty = "n")
invisible(cbind(x, fx))
}
pl.beta(3,1)
library(papaja)
library(rmarkdown)
library(tidyverse)
library(here)
library(glue)
library(metafor)
library(knitr)
library(PublicationBias)
library(janitor)
library(insight)
library(patchwork)
library(metalabr)
library(pwr)
# scripts for data presentation
source(here("writeups/paper/scripts/prisma_diagram.R"))
source(here("writeups/paper/scripts/model_print.R"))
source(here("writeups/paper/scripts/forest_plot_helper.R"))
source(here("writeups/paper/scripts/funnel_plot_helper.R"))
source(here("writeups/paper/scripts/predictor_plot_helper.R"))
source(here("writeups/paper/scripts/metalab_plot_helper.R"))
alpha <- .05
CRIT_95 <- 1.96
CRIT_99 <- 2.58
knitr::opts_chunk$set(warning = FALSE,
message = FALSE,
cache = FALSE,
echo = FALSE
)
knitr::opts_chunk$set(dev = 'pdf')
theme_set(theme_classic(base_size = 11))
# MODERATORS <- c( "NULL", "mean_age_months","productive_vocab_median", "sentence_structure", "agent_argument_type", "patient_argument_type", "n_repetitions_sentence", "n_repetitions_video", "stimuli_modality", "stimuli_actor", "transitive_event_type","intransitive_event_type", "visual_stimuli_pair", "test_method","presentation_type","character_identification", "practice_phase", "test_mass_or_distributed", "n_train_test_pair", "n_test_trial_per_pair" )
MODERATORS <- c( "NULL", "mean_age_months","productive_vocab_median", "sentence_structure", "agent_argument_type", "patient_argument_type", "n_repetitions_sentence", "stimuli_modality", "stimuli_actor",  "presentation_type","character_identification", "practice_phase", "test_mass_or_distributed", "n_train_test_pair", "n_test_trial_per_pair" )
mod_print <- generate_moderator_df(MODERATORS, ma_data)
DATA_PATH <- here("data/processed/syntactic_bootstrapping_tidy_data.csv")
RAW_DATA_PATH <- here("data/raw/syntactic_bootstrapping_raw_data.csv")
ma_data <- read_csv(DATA_PATH)
# MODERATORS <- c( "NULL", "mean_age_months","productive_vocab_median", "sentence_structure", "agent_argument_type", "patient_argument_type", "n_repetitions_sentence", "n_repetitions_video", "stimuli_modality", "stimuli_actor", "transitive_event_type","intransitive_event_type", "visual_stimuli_pair", "test_method","presentation_type","character_identification", "practice_phase", "test_mass_or_distributed", "n_train_test_pair", "n_test_trial_per_pair" )
MODERATORS <- c( "NULL", "mean_age_months","productive_vocab_median", "sentence_structure", "agent_argument_type", "patient_argument_type", "n_repetitions_sentence", "stimuli_modality", "stimuli_actor",  "presentation_type","character_identification", "practice_phase", "test_mass_or_distributed", "n_train_test_pair", "n_test_trial_per_pair" )
mod_print <- generate_moderator_df(MODERATORS, ma_data)
#generate_metalab_plot(tidy_models_with_age_younger)
label_position <- tibble(
"label" = c("Mutual Exclusivity",
"Sound Symbolism",
"Cross-Situational Word Learning",
"Gaze Following",
"Syntactic Bootstrapping"
),
color = c(
"black",
"black",
"black",
"black",
"red"
),
label_x = c(tidy_models_with_age_younger$mean_age_in_month[1] + 2,
tidy_models_with_age_younger$mean_age_in_month[2:4]+1.8,
tidy_models_with_age_younger$mean_age_in_month[5]-1.8),
label_y = tidy_models_with_age_younger$estimate
)
# MODERATORS <- c( "NULL", "mean_age_months","productive_vocab_median", "sentence_structure", "agent_argument_type", "patient_argument_type", "n_repetitions_sentence", "n_repetitions_video", "stimuli_modality", "stimuli_actor", "transitive_event_type","intransitive_event_type", "visual_stimuli_pair", "test_method","presentation_type","character_identification", "practice_phase", "test_mass_or_distributed", "n_train_test_pair", "n_test_trial_per_pair" )
MODERATORS <- c( "NULL", "mean_age_months","productive_vocab_median", "sentence_structure", "agent_argument_type", "patient_argument_type", "n_repetitions_sentence", "stimuli_modality", "stimuli_actor",  "presentation_type","character_identification", "practice_phase", "test_mass_or_distributed", "n_train_test_pair", "n_test_trial_per_pair" )
mod_print <- generate_moderator_df(MODERATORS, ma_data)
generate_forest_plot(ma_data)
unique_infants <- ma_data %>%
summarize(sum_infants = sum(n_1))  %>%
pull(sum_infants)
mean_age_day <- ma_data %>%
filter(!is.na(mean_age)) %>%
summarize(mean_age =  format(round(mean(mean_age), 2))) %>%
pull(mean_age)
SD_age_day <- ma_data %>%
filter(!is.na(mean_age)) %>%
summarize(sd_age =  format(round(sd(mean_age), 2))) %>%
pull(sd_age)
min_age_day <- ma_data %>%
filter(!is.na(mean_age)) %>%
summarize(min_age_day =  (round(min(mean_age), 2))) %>%
pull(min_age_day)
max_age_day <- ma_data %>%
filter(!is.na(mean_age)) %>%
summarize(max_age_day =  (round(max(mean_age), 2))) %>%
pull(max_age_day)
mean_age_months <- floor(as.numeric(mean_age_day) / 30.44)
mean_age_remaining_day <- round((as.numeric(mean_age_day) - mean_age_months * 30.44),0)
min_age_months <- round((as.numeric(min_age_day) / 30.44), 1)
max_age_months <- round((as.numeric(max_age_day) / 30.44), 1)
sample_size <- ma_data %>%
summarize(mean_ss = mean(n_1),
sd_ss = sd(n_1))
generate_funnel_plot(ma_data)
reg_result <- rma.mv(d_calc ~ sqrt(d_var_calc),  d_var_calc,
random = ~ 1 | short_cite/same_infant/row_id, data=ma_data) # access zval and pval from here
reg_z <- round(reg_result$zval[2], digits = 2)
p_val <- reg_result$pval[2]
reg_p <- case_when(
p_val < 0.0001 ~ "< .0001",
TRUE ~ as.character(p_val))
#reg_result
ma_data_with_affirm <- ma_data %>%
mutate(pvalue =  2 * (1 - pnorm( abs(d_calc / sqrt(d_var_calc)))),
affirm =  (d_calc > 0) & (pvalue < 0.05))
affirm_model<- rma.mv(d_calc,  d_var_calc,
random = ~ 1 | short_cite/same_infant/x_1, data=
ma_data_with_affirm %>% filter(affirm == FALSE))
worst_case_estimate_print <- paste0(as.numeric(round(affirm_model$beta, 2)),
" [",
as.numeric(round(affirm_model$ci.lb, 2)),
", ",                                                                                                        as.numeric(round(affirm_model$ci.ub, 2)),
"]"
)
ma_data %>%
ggplot() +
geom_point(aes(x = mean_age, y = d_calc, size = n_1),  alpha = .7) +
geom_smooth(method = "lm",aes(x = mean_age, y = d_calc)) +
scale_x_continuous(labels = function(x) round(x/30.44),
breaks = seq(12,48*30.44, 6*30.44)) +
geom_hline(yintercept = 0, linetype = "dashed")+
geom_smooth(method = "lm",
aes(x = mean_age, y = d_calc),
) +
ggtitle("Syntactic bootstrapping effect across development") +
xlab("Mean Age (months)") +
ylab(expression(paste("Effect Size (Cohen's ", italic(d), ")")))   +
guides(colour = FALSE, size = FALSE)
age_vocab_cor <- cor.test(ma_data$mean_age_months,ma_data$productive_vocab_median)
cor_p <- ifelse(round(age_vocab_cor$p.value, digits = 2)<0.0001, "<.0001", as.character(round(age_vocab_cor$p.value, digits = 2)))
theoretical_mod <- rma.mv(d_calc ~ sentence_structure + agent_argument_type + mean_age_months, V = d_var_calc,
random = ~ 1 | short_cite/same_infant/row_id,
method = "REML",
data = ma_data)
theoretical_mod_print <- generate_mega_model_df(theoretical_mod)
methodological_mod <- rma.mv(d_calc ~ character_identification + practice_phase + presentation_type + test_mass_or_distributed + n_repetitions_sentence,
V = d_var_calc,
random = ~ 1 | short_cite/same_infant/row_id,
method = "REML",
data = ma_data)
methodological_mod_print <- generate_mega_model_df(methodological_mod)
p_theoretical <- generate_predictor_plot(mod_print, theoretical_mod_print, "theoretical") +
theme(legend.position = "none") +
ggtitle("Theoretical Moderators") +
plot_annotation(tag_levels = 'a')
p_model <- generate_predictor_plot(mod_print, methodological_mod_print, "methodological") +
ggtitle("Methodological Moderators") +
plot_annotation(tag_levels = 'a')
p_model_pane <- p_theoretical + p_model
p_model_pane
ss_summary <- ma_data %>%
group_by(sentence_structure) %>%
summarise(
mean = mean(d_calc),
sd = sd(d_calc)
)
agent_argument_summary <- ma_data %>%
group_by(agent_argument_type) %>%
summarise(
mean = mean(d_calc),
sd = sd(d_calc)
)
testing_procedure_summary <- ma_data %>%
group_by(test_mass_or_distributed) %>%
summarise(
mean = mean(d_calc),
sd = sd(d_calc)
)
MAPPING_STUDIES <- c("Mutual exclusivity",
"Sound symbolism",
"Cross-situational word learning",
"Gaze following")
# version cached Nov29
METALAB_PATH <- here("data/metalab/metalab_raw.csv")
#download_metalab_data(METALAB_PATH)
metalab_data <- read_csv(METALAB_PATH)
all_models_res_younger <- map_df(MAPPING_STUDIES,
get_model_results_younger_than,
48,
metalab_data)
SB_res_younger <- fit_model(filter(ma_data, mean_age < 30.44 * 48), "Syntactic Bootstrapping")
all_models_res_younger <- bind_rows(all_models_res_younger, SB_res_younger)
tidy_all_models_res_younger <-  tidy_metalab_df(all_models_res_younger)
tidy_all_age_summary <- summarize_metalab_age_younger_than(ma_data,
48,
metalab_data)
tidy_models_with_age_younger <- left_join(tidy_all_models_res_younger,
tidy_all_age_summary,
by = "dataset_name")
ML_print <- get_metalab_es_print(tidy_all_models_res_younger)
metalab_num_condition <- metalab_data %>%
group_by(dataset) %>%
count()
#generate_metalab_plot(tidy_models_with_age_younger)
label_position <- tibble(
"label" = c("Mutual Exclusivity",
"Sound Symbolism",
"Cross-Situational Word Learning",
"Gaze Following",
"Syntactic Bootstrapping"
),
color = c(
"black",
"black",
"black",
"black",
"red"
),
label_x = c(tidy_models_with_age_younger$mean_age_in_month[1] + 2,
tidy_models_with_age_younger$mean_age_in_month[2:4]+1.8,
tidy_models_with_age_younger$mean_age_in_month[5]-1.8),
label_y = tidy_models_with_age_younger$estimate
)
tidy_models_with_age_younger %>%
mutate(
text_color = case_when(
dataset_name == "Syntactic Bootstrapping" ~ "red",
TRUE ~  "black"
),
dataset_name = case_when(
dataset_name == "Cross-situational word learning" ~ "Cross-Situational Word Learning",
#  dataset_name == "Syntactic Bootstrapping" ~ "Syntactic \n Bootstrapping",
dataset_name == "Mutual exclusivity" ~ "Mutual Exclusivity",
dataset_name == "Gaze following" ~ "Gaze Following",
dataset_name == "Sound symbolism" ~ "Sound Symbolism",
TRUE ~ dataset_name
)
) %>%
ggplot(aes(x = mean_age_in_month,
y = estimate,
color = text_color
)) +
# guides(size = FALSE) +
xlim(0,36) +
coord_flip() +
geom_point(aes(size = num_study)) +
scale_color_manual(values = c("black", "red")) +
guides(color = FALSE) +
geom_text(data = label_position,
aes(label = label,
x = label_x,
y = label_y,
color = color,
), size = 2)+
geom_linerange(aes(ymin = estimate.cil,
ymax = estimate.cih),size = 0.5) +
geom_hline(yintercept = 0, color = "black", linetype="dashed")+
scale_size_continuous(name = expression(paste(italic(N), " conditions"))) +
ggtitle("Effect size estimates of word learning phenomena") +
xlab("Mean Age (months)") +
ylab(expression(paste("Effect Size (Cohen's ", italic(d), ")")))
