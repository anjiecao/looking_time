theme_gray()  + theme(
panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=15, face="bold"),
axis.title.x = element_text(size=18, face='bold'),
axis.title.y = element_text(size=18, face='bold'),
axis.text = element_text(size=15),
legend.title = element_blank(),
legend.text = element_text(size=14, face='bold'),
strip.text = element_text(size=8, face='bold'),
legend.key.size = unit(2.5, 'lines')) +
scale_x_continuous(name="Block Number")
pref_data %>%
group_by(block_number, block_type) %>%
summarise(meanRT=mean(log(trial_looking_time)),
maxRT=max(log(trial_looking_time)),
minRT=min(log(trial_looking_time)),
medianRT=median(log(trial_looking_time)),
Std=sd(log(trial_looking_time)),
SE = std.error(log(trial_looking_time)),
n = n()) %>%
ggplot(
aes(x= block_number, y=medianRT, colour=block_type)) +
geom_line() +
geom_errorbar(aes(ymin=medianRT-SE,
ymax=medianRT+SE),
width=0.8, size = 0.8, position = position_dodge(width = 0.2),
show.legend = FALSE, alpha = 0.8) +
geom_point(position = position_dodge(width = 0.2), size=2.5) +
geom_line(size=1.2, position = position_dodge(width = 0.2)) +
ylab("log(RT) [msec]") +
theme_gray()  + theme(
panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=15, face="bold"),
axis.title.x = element_text(size=18, face='bold'),
axis.title.y = element_text(size=18, face='bold'),
axis.text = element_text(size=15),
legend.title = element_blank(),
legend.text = element_text(size=14, face='bold'),
strip.text = element_text(size=8, face='bold'),
legend.key.size = unit(2.5, 'lines')) +
scale_x_continuous(name="Block Number", breaks =c(2,4,6,8)) +
facet_wrap(~block_type)
pref_data %>%
group_by(block_number, block_type) %>%
summarise(meanRT=mean(log(trial_looking_time)),
maxRT=max(log(trial_looking_time)),
minRT=min(log(trial_looking_time)),
medianRT=median(log(trial_looking_time)),
Std=sd(log(trial_looking_time)),
SE = std.error(log(trial_looking_time)),
n = n()) %>%
ggplot(
aes(x= block_number, y=medianRT, colour=block_type)) +
geom_line() +
geom_errorbar(aes(ymin=medianRT-SE,
ymax=medianRT+SE),
width=0.8, size = 0.8, position = position_dodge(width = 0.2),
show.legend = FALSE, alpha = 0.8) +
geom_point(position = position_dodge(width = 0.2), size=2.5) +
geom_line(size=1.2, position = position_dodge(width = 0.2)) +
ylab("log(RT) [msec]") +
theme_gray()  + theme(
panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=15, face="bold"),
axis.title.x = element_text(size=18, face='bold'),
axis.title.y = element_text(size=18, face='bold'),
axis.text = element_text(size=15),
legend.title = element_blank(),
legend.text = element_text(size=14, face='bold'),
strip.text = element_text(size=8, face='bold'),
legend.key.size = unit(2.5, 'lines')) +
scale_x_continuous(name="Block Number") +
facet_wrap(~block_type)
View(pref_data)
pref_data %>%
group_by(block_number, stim_type_selected) %>%
summarise(meanRT=mean(log(trial_looking_time)),
maxRT=max(log(trial_looking_time)),
minRT=min(log(trial_looking_time)),
medianRT=median(log(trial_looking_time)),
Std=sd(log(trial_looking_time)),
SE = std.error(log(trial_looking_time)),
n = n()) %>%
ggplot(
aes(x= block_number, y=medianRT, colour=stim_type_selected)) +
geom_line() +
geom_errorbar(aes(ymin=medianRT-SE,
ymax=medianRT+SE),
width=0.8, size = 0.8, position = position_dodge(width = 0.2),
show.legend = FALSE, alpha = 0.8) +
geom_point(position = position_dodge(width = 0.2), size=2.5) +
geom_line(size=1.2, position = position_dodge(width = 0.2)) +
ylab("log(RT) [msec]") +
theme_gray()  + theme(
panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=15, face="bold"),
axis.title.x = element_text(size=18, face='bold'),
axis.title.y = element_text(size=18, face='bold'),
axis.text = element_text(size=15),
legend.title = element_blank(),
legend.text = element_text(size=14, face='bold'),
strip.text = element_text(size=8, face='bold'),
legend.key.size = unit(2.5, 'lines')) +
scale_x_continuous(name="Block Number") +
facet_wrap(~stim_type_selected)
pref_data %>%
group_by(block_number, stim_type_selected) %>%
summarise(meanRT=mean(log(trial_looking_time)),
maxRT=max(log(trial_looking_time)),
minRT=min(log(trial_looking_time)),
medianRT=median(log(trial_looking_time)),
Std=sd(log(trial_looking_time)),
SE = std.error(log(trial_looking_time)),
n = n()) %>%
ggplot(
aes(x= block_number, y=medianRT, colour=stim_type_selected)) +
geom_line() +
geom_errorbar(aes(ymin=medianRT-SE,
ymax=medianRT+SE),
width=0.8, size = 0.8, position = position_dodge(width = 0.2),
show.legend = FALSE, alpha = 0.8) +
geom_point(position = position_dodge(width = 0.2), size=2.5) +
geom_line(size=1.2, position = position_dodge(width = 0.2)) +
ylab("log(RT) [msec]") +
theme_gray()  + theme(
panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=15, face="bold"),
axis.title.x = element_text(size=18, face='bold'),
axis.title.y = element_text(size=18, face='bold'),
axis.text = element_text(size=15),
legend.title = element_blank(),
legend.text = element_text(size=14, face='bold'),
strip.text = element_text(size=8, face='bold'),
legend.key.size = unit(2.5, 'lines')) +
scale_x_continuous(name="Block Number") +
facet_wrap(~stim_type_selected)
df.similarity %>%
ggplot(aes(x = rating))+
geom_histogram(bins = 30)
similarity_data %>%
ggplot(aes(x = rating))+
geom_histogram(bins = 30)
df.similarity %>%
ggplot(aes(x = similarity, y= rating)) +
geom_point(alpha = 0.1,
position = position_jitter(width = 0.3)) +
stat_summary(fun.data = "mean_cl_boot") +
facet_wrap(~complexity)
similarity_data %>%
ggplot(aes(x = similarity, y= rating)) +
geom_point(alpha = 0.1,
position = position_jitter(width = 0.3)) +
stat_summary(fun.data = "mean_cl_boot") +
facet_wrap(~complexity)
View(similarity_data)
similarity_data <- similarity_data %>%
mutate(
complexity = case_when(
grepl("complex", stimulus_left) | grepl("complex", stimulus_right) ~ "complex",
grepl("simple", stimulus_right) | grepl("simple", stimulus_right) ~ "simple"
),
stimulus_left_number = as.numeric(str_extract(stimulus_left, "[[:digit:]]+")),
stimulus_right_number = as.numeric(str_extract(stimulus_right, "[[:digit:]]+")),
similarity = case_when(
stimulus_left_number == stimulus_right_number ~ "similar",
TRUE ~ "dissimilar"
)
)
similarity_data %>%
ggplot(aes(x = similarity, y= rating)) +
geom_point(alpha = 0.1,
position = position_jitter(width = 0.3)) +
stat_summary(fun.data = "mean_cl_boot") +
facet_wrap(~complexity)
complexity_data %>%
ggplot(aes(x = rating))+
geom_histogram(bins = 30)
complexity_data <- complexity_data %>%
mutate(
complexity = case_when(
grepl("complex", stimulus) ~ "complex",
grepl("simple", stimulus) ~ "simple"
)
)
complexity_data %>%
ggplot(aes(x = complexity, y = rating)) +
geom_point(alpha = 0.1,
position = position_jitter(width = 0.3)) +
stat_summary(fun.data = "mean_cl_boot")
pref_data %>%
ggplot(aes(x = stim_type_selected)) +
geom_histogram(stat = "count")
pref_data %>%
group_by(subject)
pref_data %>%
group_by(subject) %>%
count(stim_type_selected)
pref_data %>%
group_by(subject) %>%
count(stim_type_selected) %>%
filter(stim_type_selected == "novel")
mutate(percent_novel = n / 20)
pref_data %>%
group_by(subject) %>%
count(stim_type_selected) %>%
filter(stim_type_selected == "novel")
pref_data %>%
group_by(subject) %>%
count(stim_type_selected) %>%
filter(stim_type_selected == "novel")
mutate(percent_novel = (n / 20))
pref_data %>%
group_by(subject) %>%
count(stim_type_selected) %>%
filter(stim_type_selected == "novel")
mutate(percent_novel = n/20)
pref_data %>%
group_by(subject) %>%
count(stim_type_selected) %>%
filter(stim_type_selected == "novel") %>%
mutate(percent_novel = n/20)
pref_data %>%
group_by(subject) %>%
count(stim_type_selected) %>%
filter(stim_type_selected == "novel") %>%
mutate(percent_novel = n/20) %>%
ggplot(aes(x = percent_novel)) %>%
geom_histogram()
pref_data %>%
group_by(subject) %>%
count(stim_type_selected) %>%
filter(stim_type_selected == "novel") %>%
mutate(percent_novel = n/20) %>%
ggplot(aes(x = percent_novel)) +
geom_histogram()
pref_data %>%
group_by(subject) %>%
count(stim_type_selected) %>%
filter(stim_type_selected == "novel") %>%
mutate(percent_novel = n/20) %>%
ggplot(aes(x = percent_novel)) +
geom_histogram(bins = 25)
pref_data %>%
group_by(subject) %>%
count(stim_type_selected) %>%
filter(stim_type_selected == "novel") %>%
mutate(percent_novel = n/20) %>%
ggplot(aes(x = percent_novel)) +
geom_histogram(bins = 2)
pref_data %>%
group_by(subject) %>%
count(stim_type_selected) %>%
filter(stim_type_selected == "novel") %>%
mutate(percent_novel = n/20) %>%
ggplot(aes(x = percent_novel)) +
geom_histogram(bins = 20)
ggplot(RT_data,
aes(x = item_type, y=medianRT, colour=item_type)) +
stat_summary(fun = "tidy_boot_mean")
library(here)
library(tidyverse)
library(stringr) # for parsing r string
library(jsonlite) # for parsing r string
library(ggiraphExtra)
library(plotrix)
RT_data <- read_csv(here('data/processed_data/trimmed_RTdata.csv'))
pref_data <- read_csv(here('data/processed_data/trimmed_prefdata.csv'))
similarity_data <- read_csv(here('data/processed_data/trimmed_similaritydata.csv'))
complexity_data <- read_csv(here('data/processed_data/trimmed_complexitydata.csv'))
demog_data <- read_csv(here('data/processed_data/trimmed_demogdata.csv'))
RT_data %>%
distinct(subject) %>%
count()
demog_data %>%
ggplot(aes(x = age)) +
geom_histogram()
demog_data %>%
ggplot(aes(x = ethnicity)) +
geom_histogram(stat = "count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
demog_data %>%
ggplot(aes(x = gender)) +
geom_histogram(stat = "count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
demog_data %>%
ggplot(aes(x = education)) +
geom_histogram(stat = "count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
RT_data %>%
ggplot(aes(x = rt)) +
geom_histogram() +
scale_x_log10()
RT_data %>%
ggplot(aes(x = rt)) +
geom_histogram() +
scale_x_log10() +
facet_wrap(~trial_type)
RT_data %>%
ggplot(aes(x = rt)) +
geom_histogram() +
scale_x_log10() +
facet_wrap(~trial_complexity)
RT_data %>%
ggplot(aes(x = rt)) +
geom_histogram() +
scale_x_log10() +
facet_wrap(~block_type)
RT_data %>%
filter(trial_complexity == "simple") %>%
ggplot(aes(x = rt)) +
geom_histogram() +
scale_x_log10() +
facet_wrap(~item_id)
RT_data %>%
filter(trial_complexity == "complex") %>%
ggplot(aes(x = rt)) +
geom_histogram() +
scale_x_log10() +
facet_wrap(~item_id)
summarized <- RT_data %>%
group_by(trial_number, item_type, trial_complexity) %>%
summarise(meanRT=mean(rt), maxRT=max(rt), minRT=min(rt), medianRT=median(rt), Std=sd(rt), SE = std.error(rt), n = n())
ggplot(summarized, aes(x=trial_number, y=medianRT, colour=item_type)) + geom_line() + geom_errorbar(aes(ymin=medianRT-SE, ymax=medianRT+SE),
width=0.8, size = 0.8, position = position_dodge(width = 0.2), show.legend = FALSE, alpha = 0.8) +
geom_point(position = position_dodge(width = 0.2), size=2.5) + geom_line(size=1.2, position = position_dodge(width = 0.2)) + ylab("RT [msec]") +
theme_gray()  + theme(
panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=22, face="bold"),
axis.title.x = element_text(size=18, face='bold'),
axis.title.y = element_text(size=18, face='bold'),
axis.text = element_text(size=15),
legend.title = element_blank(),
legend.text = element_text(size=14, face='bold'),
strip.text = element_text(size=17, face='bold'),
legend.key.size = unit(2.5, 'lines')) +
scale_x_continuous(name="Trial Number", breaks =c(2,4,6,8)) +
facet_grid(~trial_complexity)
summarized <- RT_data %>%
group_by(trial_number, trial_type, trial_complexity) %>%
summarise(meanRT=mean(rt), maxRT=max(rt), minRT=min(rt), medianRT=median(rt), Std=sd(rt), SE = std.error(rt), n = n())
ggplot(summarized, aes(x=trial_number, y=medianRT, colour=trial_type)) + geom_line() + geom_errorbar(aes(ymin=medianRT-SE, ymax=medianRT+SE),
width=0.8, size = 0.8, position = position_dodge(width = 0.2), show.legend = FALSE, alpha = 0.8) +
geom_point(position = position_dodge(width = 0.2), size=2.5) + geom_line(size=1.2, position = position_dodge(width = 0.2)) + ylab("RT [msec]") +
theme_gray()  + theme(
panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=22, face="bold"),
axis.title.x = element_text(size=18, face='bold'),
axis.title.y = element_text(size=18, face='bold'),
axis.text = element_text(size=15),
legend.title = element_blank(),
legend.text = element_text(size=14, face='bold'),
strip.text = element_text(size=17, face='bold'),
legend.key.size = unit(2.5, 'lines')) +
scale_x_continuous(name="Trial Number", breaks =c(2,4,6,8)) +
facet_grid(~trial_complexity)
summarized_log <- RT_data %>%
group_by(trial_number, item_type, trial_complexity) %>%
summarise(meanRT=mean(log(rt)),
maxRT=max(log(rt)),
minRT=min(log(rt)),
medianRT=median(log(rt)),
Std=sd(log(rt)),
SE = std.error(log(rt)),
n = n())
ggplot(summarized_log,
aes(x= trial_number, y=medianRT, colour=item_type)) +
geom_line() +
geom_errorbar(aes(ymin=medianRT-SE,
ymax=medianRT+SE),
width=0.8, size = 0.8, position = position_dodge(width = 0.2),
show.legend = FALSE, alpha = 0.8) +
geom_point(position = position_dodge(width = 0.2), size=2.5) +
geom_line(size=1.2, position = position_dodge(width = 0.2)) +
ylab("log(RT) [msec]") +
theme_gray()  + theme(
panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=15, face="bold"),
axis.title.x = element_text(size=18, face='bold'),
axis.title.y = element_text(size=18, face='bold'),
axis.text = element_text(size=15),
legend.title = element_blank(),
legend.text = element_text(size=14, face='bold'),
strip.text = element_text(size=8, face='bold'),
legend.key.size = unit(2.5, 'lines')) +
scale_x_continuous(name="Trial Number", breaks =c(2,4,6,8)) +
facet_grid(item_type ~ trial_complexity)
summarized_log <- RT_data %>%
group_by(item_type, trial_complexity) %>%
summarise(meanRT=mean((rt)),
maxRT=max((rt)),
minRT=min((rt)),
medianRT=median((rt)),
Std=sd((rt)),
SE = std.error((rt)),
n = n())
ggplot(summarized_log,
aes(x = item_type, y=medianRT, colour=item_type)) +
geom_line() +
geom_errorbar(aes(ymin=medianRT-SE,
ymax=medianRT+SE),
width=0.8, size = 0.8, position = position_dodge(width = 0.2),
show.legend = FALSE, alpha = 0.8) +
geom_point(position = position_dodge(width = 0.2), size=2.5) +
geom_line(size=1.2, position = position_dodge(width = 0.2)) +
ylab("RT [msec]") +
theme_gray()  + theme(
panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=15, face="bold"),
axis.title.x = element_blank(),
axis.title.y = element_text(size=18, face='bold'),
axis.text.x = element_blank(),
axis.text.y = element_text(size=15),
legend.title = element_blank(),
legend.text = element_text(size=14, face='bold'),
strip.text = element_text(size=8, face='bold'),
legend.key.size = unit(2.5, 'lines')) +
facet_grid(~ trial_complexity)
ggplot(RT_data,
aes(x = item_type, y=medianRT, colour=item_type)) +
stat_summary(fun = "tidy_boot_mean")
ggplot(RT_data,
aes(x = item_type, y=rt, colour=item_type)) +
stat_summary(fun = "tidy_boot_mean")
stat_summary
?stat_summary
ggplot(RT_data,
aes(x = item_type, y=rt, colour=item_type)) +
stat_summary(fun.data = "mean_cl_boot")
ggplot(RT_data,
aes(x = item_type, y=rt, colour=item_type)) +
stat_summary(fun.data = "mean_cl_boot") +
facet_wrap(~trial_complexity)
ggplot(RT_data,
aes(x = item_type, y=rt, colour=item_type)) +
stat_summary(fun.data = "mean_cl_boot") +
facet_wrap(~trial_complexity) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)
ggplot(RT_data,
aes(x = item_type, y=rt, colour=item_type)) +
stat_summary(fun.data = "mean_cl_boot") +
facet_wrap(~trial_complexity) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(RT_data, aes(x=trial_number,
y=RT, colour=item_type)) +
stat_summary(fun.data = "mean_cl_boot")
ggplot(RT_data, aes(x=trial_number,
y=rt, colour=item_type)) +
stat_summary(fun.data = "mean_cl_boot")
ggplot(RT_data, aes(x=trial_number,
y=rt, colour=item_type)) +
stat_summary(fun.data = "mean_cl_boot") +
geom_smooth(stat = "lm")
?geom_smooth
ggplot(RT_data, aes(x=trial_number,
y=rt, colour=item_type)) +
stat_summary(fun.data = "mean_cl_boot") +
geom_smooth(method = "lm")
View(df.complexity)
df.complexity %>%
ggplot(aes(x = complexity, y = rating)) +
geom_point(alpha = 0.1,
position = position_jitter(width = 0.3)) +
stat_summary(fun.data = "mean_cl_boot") +
facet_wrap(~stimulus)
View(df.complexity)
library(tidyverse)
library(here)
library(stringr)
SIMILARITY_DATA_PATH <- here("data/processed_data/trimmed_similaritydata.csv")
COMPLEXITY_DATA_PATH <- here("data/processed_data/trimmed_complexitydata.csv")
df.similarity <- read_csv(SIMILARITY_DATA_PATH)
df.complexity <- read_csv(COMPLEXITY_DATA_PATH)
df.similarity <- df.similarity %>%
mutate(
complexity = case_when(
grepl("complex", stimulus_left) | grepl("complex", stimulus_right) ~ "complex",
grepl("simple", stimulus_right) | grepl("simple", stimulus_right) ~ "simple"
),
stimulus_left_number = as.numeric(str_extract(stimulus_left, "[[:digit:]]+")),
stimulus_right_number = as.numeric(str_extract(stimulus_right, "[[:digit:]]+")),
similarity = case_when(
stimulus_left_number == stimulus_right_number ~ "similar",
TRUE ~ "dissimilar"
)
)
df.similarity %>%
ggplot(aes(x = rating))+
geom_histogram(bins = 30)
df.similarity %>%
ggplot(aes(x = similarity, y= rating)) +
geom_point(alpha = 0.1,
position = position_jitter(width = 0.3)) +
stat_summary(fun.data = "mean_cl_boot") +
facet_wrap(~complexity)
lm.similarity <- lm(formula = rating ~ similarity + complexity,
data = df.similarity)
summary(lm.similarity)
df.complexity <- df.complexity %>%
mutate(
complexity = case_when(
grepl("complex", stimulus) ~ "complex",
grepl("simple", stimulus) ~ "simple"
)
)
df.complexity %>%
ggplot(aes(x = rating))+
geom_histogram(bins = 30)
df.complexity %>%
ggplot(aes(x = complexity, y = rating)) +
geom_point(alpha = 0.1,
position = position_jitter(width = 0.3)) +
stat_summary(fun.data = "mean_cl_boot")
