ggplot(RT_data, aes(x=trial_number, y=log(rt), colour=item_type)) +
stat_summary(fun.data = "mean_cl_boot", position = position_dodge(width = .1)) +
stat_summary(geom = "line", alpha = .5) +
geom_smooth(method = "lm",
formula = y ~ log(x)) +
geom_smooth(method = "lm",
formula = y  ~ I((exp(1)**(-x))))+
facet_grid(block_type ~ item_type)
ggplot(RT_data, aes(x=trial_number, y=log(rt), colour=item_type)) +
stat_summary(fun.data = "mean_cl_boot", position = position_dodge(width = .1)) +
stat_summary(geom = "line", alpha = .5) +
geom_smooth(method = "lm",
formula = y ~ log(x),
color = "black") +
geom_smooth(method = "lm",
formula = y  ~ I((exp(1)**(-x))))+
facet_grid(block_type ~ item_type)
source('~/Desktop/projects/looking_time/adult_analysis/scripts/poli_model_wave2.R', echo=TRUE)
library(tidyverse)
library(patchwork)
library(here)
source(here("scripts/poli_model_wave2.R"))
example_seq <- c(1,1,1,1,1,1,2,1)
single_block <- poli_model_pokebaby(example_seq)
source('~/Desktop/projects/looking_time/adult_analysis/scripts/poli_model_wave2.R', echo=TRUE)
library(tidyverse)
library(patchwork)
library(here)
source(here("scripts/poli_model_wave2.R"))
example_seq <- c(1,1,1,1,1,1,2,1)
single_block <- poli_model_pokebaby(example_seq)
single_block
poli_model_plot(single_block)
example_seq <- c(1,1,1,1,2,1)
single_block <- poli_model_pokebaby(example_seq)
single_block
poli_model_plot(single_block)
seq <- c(1,1,1,1,2,1)
as.data.frame(table(seq))
sort(table(seq),decreasing=TRUE)[1:3]
sort(table(seq),decreasing=TRUE)[1]
sort(table(seq),decreasing=TRUE)[1] %>% pull()
names(sort(table(seq),decreasing=TRUE)[1])
i = 1
target = seq[i]
target
non_target
seq - target
target = 2
seq - target
background <- names(sort(table(seq),decreasing=TRUE)[1])
background
as.numeric(background)
as.numeric(names(sort(table(seq),decreasing=TRUE)[2]))
source('~/Desktop/projects/looking_time/adult_analysis/scripts/poli_model_wave2.R', echo=TRUE)
example_seq <- c(1,1,1,1,2,1)
single_block <- poli_model_pokebaby(example_seq, similar = FALSE)
single_block
poli_model_plot(single_block)
single_block <- poli_model_pokebaby(example_seq, similar = TRUE)
single_block
poli_model_plot(single_block)
single_block <- poli_model_pokebaby(example_seq, similar = TRUE)
single_block
poli_model_plot(single_block)
dissimilar
single_block_similar <- poli_model_pokebaby(example_seq, similar = TRUE) %>%
mutate(similarity = "similar")
single_block_similarity <- bind_rows(single_block_dissimilar, single_block_dissimilar)
example_seq <- c(1,1,1,1,2,1)
single_block_dissimilar <- poli_model_pokebaby(example_seq, similar = FALSE) %>%
mutate(similarity = "dissimilar")
single_block_similar <- poli_model_pokebaby(example_seq, similar = TRUE) %>%
mutate(similarity = "similar")
single_block_similarity <- bind_rows(single_block_dissimilar, single_block_dissimilar)
poli_model_plot(single_block_similarity) %>%
facet_wrap(~similarity)
single_block_similar <- poli_model_pokebaby(example_seq, similar = TRUE) %>%
mutate(similarity = "similar")
single_block_similarity <- bind_rows(single_block_dissimilar, single_block_dissimilar)
poli_model_plot(single_block_similarity) +
facet_wrap(~similarity)
df.plot <- model %>%
select(trials, surprisal, predictability, learning_progress, similarity) %>%
pivot_longer(cols = c("surprisal", "predictability", "learning_progress"),
names_to = "measure",
values_to = "value") %>%
filter(trials != 0)
df.plot <- single_block_similarity %>%
select(trials, surprisal, predictability, learning_progress, similarity) %>%
pivot_longer(cols = c("surprisal", "predictability", "learning_progress"),
names_to = "measure",
values_to = "value") %>%
filter(trials != 0)
surprise_plot <- df.plot %>%
filter(measure == "surprisal") %>%
ggplot(aes(x = trials, y = value, color = similarity)) +
geom_point() +
geom_line() +
ylab("surprise") #+
#scale_x_continuous(breaks =seq(1,12,1))
predictability_plot <- df.plot %>%
filter(measure == "predictability") %>%
ggplot(aes(x = trials, y = value, color = similarity)) +
geom_point() +
geom_line() +
ylab("predictability") #+
#scale_x_continuous(breaks =seq(1,12,1))
learning_progress_plot <- df.plot %>%
filter(measure == "learning_progress") %>%
ggplot(aes(x = trials, y = value, color = similarity)) +
geom_point() +
geom_line() +
ylab("learning_progress") #+
#scale_x_continuous(breaks =seq(1,12,1))
surprise_plot+predictability_plot+learning_progress_plot + plot_layout(ncol = 1)
single_block_similar <- poli_model_pokebaby(example_seq, similar = TRUE) %>%
mutate(similarity = "similar")
single_block_similarity <- bind_rows(single_block_similar, single_block_dissimilar)
df.plot <- single_block_similarity %>%
select(trials, surprisal, predictability, learning_progress, similarity) %>%
pivot_longer(cols = c("surprisal", "predictability", "learning_progress"),
names_to = "measure",
values_to = "value") %>%
filter(trials != 0)
surprise_plot <- df.plot %>%
filter(measure == "surprisal") %>%
ggplot(aes(x = trials, y = value, color = similarity)) +
geom_point() +
geom_line() +
ylab("surprise") #+
#scale_x_continuous(breaks =seq(1,12,1))
predictability_plot <- df.plot %>%
filter(measure == "predictability") %>%
ggplot(aes(x = trials, y = value, color = similarity)) +
geom_point() +
geom_line() +
ylab("predictability") #+
#scale_x_continuous(breaks =seq(1,12,1))
learning_progress_plot <- df.plot %>%
filter(measure == "learning_progress") %>%
ggplot(aes(x = trials, y = value, color = similarity)) +
geom_point() +
geom_line() +
ylab("learning_progress") #+
#scale_x_continuous(breaks =seq(1,12,1))
surprise_plot+predictability_plot+learning_progress_plot + plot_layout(ncol = 1)
install.packages("greta")
install.packages("tidybayse")
source('~/Desktop/projects/looking_time/adult_analysis/scripts/poli_model_wave2.R', echo=TRUE)
example_seq <- c(1,1,1,1,2,1)
single_block_dissimilar <- poli_model_pokebaby(example_seq, similar = FALSE) %>%
mutate(similarity = "dissimilar")
single_block_similar <- poli_model_pokebaby(example_seq, similar = TRUE) %>%
mutate(similarity = "similar")
single_block_similarity <- bind_rows(single_block_similar, single_block_dissimilar)
df.plot <- single_block_similarity %>%
select(trials, surprisal, predictability, learning_progress, similarity) %>%
pivot_longer(cols = c("surprisal", "predictability", "learning_progress"),
names_to = "measure",
values_to = "value") %>%
filter(trials != 0)
surprise_plot <- df.plot %>%
filter(measure == "surprisal") %>%
ggplot(aes(x = trials, y = value, color = similarity)) +
geom_point() +
geom_line() +
ylab("surprise") #+
#scale_x_continuous(breaks =seq(1,12,1))
predictability_plot <- df.plot %>%
filter(measure == "predictability") %>%
ggplot(aes(x = trials, y = value, color = similarity)) +
geom_point() +
geom_line() +
ylab("predictability") #+
#scale_x_continuous(breaks =seq(1,12,1))
learning_progress_plot <- df.plot %>%
filter(measure == "learning_progress") %>%
ggplot(aes(x = trials, y = value, color = similarity)) +
geom_point() +
geom_line() +
ylab("learning_progress") #+
#scale_x_continuous(breaks =seq(1,12,1))
surprise_plot+predictability_plot+learning_progress_plot + plot_layout(ncol = 1)
df.plot <- single_block_similarity %>%
select(trials, surprisal, predictability, learning_progress, similarity) %>%
pivot_longer(cols = c("surprisal", "predictability", "learning_progress"),
names_to = "measure",
values_to = "value") %>%
filter(trials != 0)
surprise_plot <- df.plot %>%
filter(measure == "surprisal") %>%
ggplot(aes(x = trials, y = value, color = similarity)) +
geom_point() +
geom_line() +
ylab("surprise") #+
#scale_x_continuous(breaks =seq(1,12,1))
predictability_plot <- df.plot %>%
filter(measure == "predictability") %>%
ggplot(aes(x = trials, y = value, color = similarity)) +
geom_point() +
geom_line() +
ylab("predictability") #+
#scale_x_continuous(breaks =seq(1,12,1))
learning_progress_plot <- df.plot %>%
filter(measure == "learning_progress") %>%
ggplot(aes(x = trials, y = value, color = similarity)) +
geom_point(position = position_dodge(width = .1)) +
geom_line() +
ylab("learning_progress") #+
#scale_x_continuous(breaks =seq(1,12,1))
surprise_plot+predictability_plot+learning_progress_plot + plot_layout(ncol = 1)
df.plot <- single_block_similarity %>%
select(trials, surprisal, predictability, learning_progress, similarity) %>%
pivot_longer(cols = c("surprisal", "predictability", "learning_progress"),
names_to = "measure",
values_to = "value") %>%
filter(trials != 0)
surprise_plot <- df.plot %>%
filter(measure == "surprisal") %>%
ggplot(aes(x = trials, y = value, color = similarity)) +
geom_point(position = position_dodge(width = .1)) +
geom_line() +
ylab("surprise") #+
#scale_x_continuous(breaks =seq(1,12,1))
predictability_plot <- df.plot %>%
filter(measure == "predictability") %>%
ggplot(aes(x = trials, y = value, color = similarity)) +
geom_point(position = position_dodge(width = .1)) +
geom_line() +
ylab("predictability") #+
#scale_x_continuous(breaks =seq(1,12,1))
learning_progress_plot <- df.plot %>%
filter(measure == "learning_progress") %>%
ggplot(aes(x = trials, y = value, color = similarity)) +
geom_point(position = position_dodge(width = .1)) +
geom_line() +
ylab("learning_progress") #+
#scale_x_continuous(breaks =seq(1,12,1))
surprise_plot+predictability_plot+learning_progress_plot + plot_layout(ncol = 1)
View(single_block_similarity)
library(lme4)
library(here)
library(tidyverse)
library(stringr) # for parsing r string
library(jsonlite) # for parsing r string
library(ggiraphExtra)
library(plotrix)
library(lmerTest)
RT_data <- read_csv(here('data/processed_data/trimmed_RTdata.csv'))
#pref_data <- read_csv(here('data/processed_data/trimmed_prefdata.csv'))
similarity_data <- read_csv(here('data/processed_data/trimmed_similaritydata.csv'))
complexity_data <- read_csv(here('data/processed_data/trimmed_complexitydata.csv'))
demog_data <- read_csv(here('data/processed_data/trimmed_demogdata.csv'))
RT_data %>%
distinct(subject) %>%
count()
# reorder
RT_data$trial_complexity = factor(RT_data$trial_complexity, levels=c('simple', 'complex'))
RT_data$item_type = factor(RT_data$item_type, levels=c('background', 'similar deviant', 'dissimilar deviant'))
demog_data %>%
ggplot(aes(x = as.numeric(age))) +
geom_histogram()
demog_data %>%
ggplot(aes(x = ethnicity)) +
geom_histogram(stat = "count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
demog_data %>%
ggplot(aes(x = gender)) +
geom_histogram(stat = "count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
demog_data %>%
ggplot(aes(x = education)) +
geom_histogram(stat = "count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
RT_data %>%
ggplot(aes(x = rt)) +
geom_histogram() +
scale_x_log10()
RT_data %>%
ggplot(aes(x = rt)) +
geom_histogram() +
scale_x_log10() +
facet_wrap(~trial_type)
RT_data %>%
ggplot(aes(x = rt)) +
geom_histogram() +
scale_x_log10() +
facet_grid(block_type~trial_type)
RT_data %>%
ggplot(aes(x = rt)) +
geom_histogram() +
scale_x_log10() +
facet_wrap(~trial_complexity)
RT_data %>%
ggplot(aes(x = rt)) +
geom_histogram() +
scale_x_log10() +
facet_wrap(~block_type)
RT_data %>%
filter(trial_complexity == "simple") %>%
ggplot(aes(x = rt)) +
geom_histogram() +
scale_x_log10() +
facet_wrap(~item_id)
RT_data %>%
filter(trial_complexity == "complex") %>%
ggplot(aes(x = rt)) +
geom_histogram() +
scale_x_log10() +
facet_wrap(~item_id)
model_log <- lmer(log(rt) ~ log(trial_number) * item_type * trial_complexity +
(1 | subject),
data = RT_data)
summary(model_log)$coef %>% knitr::kable(digits = 2)
model_log <- lmer(log(rt) ~ I((exp(1)**(-trial_number))) * item_type * trial_complexity +
(1 | subject),
data = RT_data)
summary(model_log)$coef %>% knitr::kable(digits = 2)
block_model_log <- lmer(log(rt) ~ log(block_number_model) *  trial_complexity +
(1 | subject),
data = RT_data %>% mutate(block_number_model = block_number + 1))
summary(block_model_log)$coef %>% knitr::kable(digits = 2)
block_model_exp_log <- lmer(log(rt) ~ I((exp(1)**(-block_number_model))) *  trial_complexity +
(1 | subject),
data = RT_data %>% mutate(block_number_model = block_number + 1))
summary(block_model_exp_log)$coef %>% knitr::kable(digits = 2)
ggplot(RT_data, aes(x=trial_number, y=log(rt), colour=item_type)) +
stat_summary(fun.data = "mean_cl_boot", position = position_dodge(width = .1)) +
stat_summary(geom = "line", alpha = .5) +
geom_smooth(method = "lm",
formula = y ~ log(x)) +
facet_wrap(~block_type)
ggplot(RT_data, aes(x=trial_number, y=log(rt), color = trial_complexity)) +
stat_summary(fun.data = "mean_cl_boot",
position = position_dodge(width = .1)) +
stat_summary(geom = "line", alpha = .5) +
geom_smooth(method = "lm",
formula = y ~ log(x)) +
facet_grid(~trial_type)
ggplot(RT_data, aes(x=trial_type, y=log(rt))) +
stat_summary(fun.data = "mean_cl_boot") +
facet_wrap(~block_type)
ggplot(RT_data, aes(x=trial_type_index, y=log(rt))) +
stat_summary(fun.data = "mean_cl_boot") +
facet_wrap(~block_type)
RT_data %>%
filter(is.na(first_dev_position) |
trial_number < first_dev_position |
trial_number == first_dev_position) %>%
ggplot(aes(x=trial_number, y=log(rt), color = item_type)) +
stat_summary(fun.data = "mean_cl_boot",
position = position_dodge(width = .1)) +
stat_summary(geom = "line", alpha = .5) +
geom_smooth(method = "lm",
formula = y ~ log(x)) +
facet_wrap(~block_type)
RT_data %>%
filter(is.na(first_dev_position) |
trial_number < first_dev_position |
trial_number == first_dev_position) %>%
filter(trial_number != 1) %>%
ggplot(aes(x=trial_number, y=log(rt), color = item_type)) +
stat_summary(fun.data = "mean_cl_boot",
position = position_dodge(width = .1)) +
stat_summary(geom = "line", alpha = .5) +
geom_smooth(method = "lm",
formula = y ~ log(x)) +
facet_wrap(~block_type) +
labs(title = "No first trial")
RT_data %>%
mutate(block_number_for_plot = block_number + 1) %>%
ggplot(aes(x=block_number_for_plot, y=log(rt), colour=block_type)) +
stat_summary(fun.data = "mean_cl_boot") +
stat_smooth(method = "lm",
formula = y ~ log(x))
RT_data %>%
mutate(block_number_for_plot = block_number + 1) %>%
ggplot(aes(x=block_number_for_plot, y=log(rt), colour=as.factor(block_deviant_number))) +
stat_summary(fun.data = "mean_cl_boot") +
stat_smooth(method = "lm",
formula = y ~ log(x))
RT_data %>%
mutate(block_number_for_plot = block_number + 1) %>%
ggplot(aes(x=block_number_for_plot,
y=log(rt),
colour=trial_complexity)) +
stat_summary(fun.data = "mean_cl_boot") +
stat_smooth(method = "lm",
formula = y ~ log(x))
similarity_data %>%
ggplot(aes(x = rating))+
geom_histogram(bins = 30)
similarity_data <- similarity_data %>%
mutate(
complexity = case_when(
grepl("complex", stimulus_left) | grepl("complex", stimulus_right) ~ "complex",
grepl("simple", stimulus_right) | grepl("simple", stimulus_right) ~ "simple"
),
stimulus_left_number = as.numeric(str_extract(stimulus_left, "[[:digit:]]+")),
stimulus_right_number = as.numeric(str_extract(stimulus_right, "[[:digit:]]+")),
similarity = case_when(
stimulus_left_number == stimulus_right_number ~ "similar",
TRUE ~ "dissimilar"
)
)
similarity_data %>%
ggplot(aes(x = similarity, y= rating)) +
geom_point(alpha = 0.1,
position = position_jitter(width = 0.3)) +
stat_summary(fun.data = "mean_cl_boot") +
facet_wrap(~complexity)
similarity_rating_model_interaction <- lmer(rating~complexity*similarity + (1|subject),
data = similarity_data,
REML = FALSE)
similarity_rating_model <- lmer(rating~similarity + (1|subject),
data = similarity_data,
REML = FALSE)
anova(similarity_rating_model_interaction, similarity_rating_model)
summary(similarity_rating_model_interaction)$coef %>% knitr::kable(digits = 2)
complexity_data %>%
ggplot(aes(x = rating))+
geom_histogram(bins = 30)
complexity_data <- complexity_data %>%
mutate(
complexity = case_when(
grepl("complex", stimulus) ~ "complex",
grepl("simple", stimulus) ~ "simple"
)
)
complexity_data %>%
ggplot(aes(x = complexity, y = rating)) +
geom_point(alpha = 0.1,
position = position_jitter(width = 0.3)) +
stat_summary(fun.data = "mean_cl_boot")
complexity_rating_model <- lmer(rating~complexity + (1|subject),
data = complexity_data)
summary(complexity_rating_model)$coef %>% knitr::kable(digits = 2)
complexity_action <- complexity_data %>%
mutate(item_id_full =
str_match(stimulus, "spore_stims/\\s*(.*?).gif")[,2],
item_id_no_action = str_match(stimulus, "spore_stims/\\s*(.*?)..\\s*.gif")[,2],
action_type = str_sub(item_id_full, -1))
action_summary <- complexity_action %>%
group_by(action_type) %>%
tidyboot::tidyboot_mean(rating)
action_summary %>%
ggplot(aes(x = action_type, y = mean)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper))
complexity_summary <- complexity_action %>%
group_by(item_id_no_action) %>%
tidyboot::tidyboot_mean(rating) %>%
mutate(
complexity = case_when(
grepl("complex", item_id_no_action) ~ "complex",
TRUE ~ "simple")
)
complexity_summary %>%
ggplot(aes(x = reorder(item_id_no_action, mean), y = mean, color = complexity)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(1.5)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
log_rt_deviant <- RT_data %>%
filter(trial_type == "background") %>%
group_by(item_id) %>%
tidyboot::tidyboot_mean(log(rt)) %>%
mutate(type = "log_rt",
complexity = case_when(
grepl("complex", item_id) ~ "complex",
TRUE ~ "simple")
)
complexity_temp <- complexity_summary %>%
mutate(type = "rating") %>%
mutate(item_id = item_id_no_action) %>%
select(-item_id_no_action)
dishab_df <- bind_rows(log_rt_deviant,
complexity_temp)
dishab_df %>%
ggplot(aes(x = reorder(item_id, mean), y = mean,
color = complexity,
shape = type)) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(1.5)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
c_temp <- complexity_temp %>%
select(item_id, complexity, mean) %>%
rename(mean_rating = mean)
log_rt_deviant %>%
select(item_id, mean) %>%
rename(log_mean_dishab = mean) %>%
left_join(c_temp, by = "item_id") %>%
ggplot(aes(x = mean_rating, y = log_mean_dishab,
color = complexity)) +
geom_point()
log_rt_deviant %>%
filter(complexity == "complex") %>%
select(item_id, mean) %>%
rename(log_mean_dishab = mean) %>%
left_join(c_temp, by = "item_id") %>%
ggplot(aes(x = mean_rating, y = log_mean_dishab,
color = complexity)) +
geom_point() +
geom_smooth(method = "lm")
log_rt_deviant %>%
filter(complexity == "simple") %>%
select(item_id, mean) %>%
rename(log_mean_dishab = mean) %>%
left_join(c_temp, by = "item_id") %>%
ggplot(aes(x = mean_rating, y = log_mean_dishab,
color = complexity)) +
geom_point() +
geom_smooth(method = "lm")
