all_z_overbar_given_theta
posterior_distribution = (all_z_overbar_given_theta * thetas) / z_overbar
posterior_distribution
library(tidyverse)
library(matrixStats)
library(here)
source(here("adult_modeling/scripts/grid_approximation.R"))
source(here("adult_modeling/scripts/noisy_update.R"))
noisy_observation_feature <- function(
feature,
n_sample,
epsilon
){
real_features <- rep(feature, n_sample)
noisy <- rbernoulli(p = epsilon, n = n_sample)
return(ifelse(noisy, 1-real_features, real_features))
}
noisy_observation_creature <- function(
creature,
n_sample,
epsilon
){
sapply(creature, function(y){noisy_observation_feature(
feature = y,
n_sample = n_sample,
epsilon = epsilon
)})
}
test_creature_background_theta <- c(0.2, 0.2, 0.2, 0.8, 0.8, 0.3)
test_creature_deviant_theta <- c(0.2, 0.8, 0.8, 0.2, 0.2, 0.9)
#test creature
# these will be a block [y_1, y_2, y_3, y_4, z_1, y_5]
y_1 <- sapply(test_creature_background_theta, function(x){rbernoulli(p = x, n = 1)})
y_2 <- sapply(test_creature_background_theta, function(x){rbernoulli(p = x, n = 1)})
y_3 <- sapply(test_creature_background_theta, function(x){rbernoulli(p = x, n = 1)})
y_4 <- sapply(test_creature_background_theta, function(x){rbernoulli(p = x, n = 1)})
z_1 <-  sapply(test_creature_deviant_theta, function(x){rbernoulli(p = x, n = 1)})
#y_5 <- sapply(test_creature_background_theta, function(x){rbernoulli(p = x, n = 1)})
# in each trial collects like 100 times
y_1_noisy_observation <- rbind(noisy_observation_creature(y_1, 50, 0.2))
y_2_noisy_observation <- rbind(noisy_observation_creature(y_2, 50, 0.2))
y_3_noisy_observation <-  rbind(noisy_observation_creature(y_3, 50, 0.2))
y_4_noisy_observation <-  rbind(noisy_observation_creature(y_4, 30, 0.2))
z_1_noisy_observation <-  rbind(noisy_observation_creature(z_1, 30, 0.2))
grid_theta <- seq(0.01, 0.9, 0.05)
grid_epsilon <- seq(0.01, 0.9, 0.05)
post_first_update_theta_approx <- grid_approximate_creature_with_theta_initial(
grid_theta = grid_theta,
grid_epsilon = grid_epsilon,
noisy_creature_observation = y_1_noisy_observation,
alpha_prior = 1,
beta_prior = 1,
alpha_epsilon = 10,
beta_epsilon = 1
)
post_first_update_theta_epsilon_approx <- grid_approximate_creature_with_theta_and_epsilon_initial(
grid_theta = grid_theta,
grid_epsilon = grid_epsilon,
noisy_creature_observation = y_1_noisy_observation,
alpha_prior = 1,
beta_prior = 1,
alpha_epsilon = 10,
beta_epsilon = 1
)
post_first_update_theta_approx
post_first_update_theta_epsilon_approx
post_second_update_theta_approx <- grid_approximate_creature_with_theta_continuous(
grid_theta = grid_theta,
grid_epsilon = grid_epsilon,
noisy_creature_observation = y_2_noisy_observation,
updated_posterior_df = post_first_update_theta_approx,
alpha_epsilon = 10,
beta_epsilon = 1
)
# current having weird issue around 0.1; R refuses to recognize it is there
# leading to weird issue related to log probablity having numeric(0) and problem with normalizing
post_second_update_theta_epsilon_approx <- grid_approximate_creature_with_theta_and_epsilon_continuous(
grid_theta = grid_theta,
grid_epsilon = grid_epsilon,
noisy_creature_observation = y_2_noisy_observation,
updated_posterior_df = post_first_update_theta_approx,
alpha_epsilon = 10,
beta_epsilon = 1
)
post_third_update_theta_approx <- grid_approximate_creature_with_theta_continuous(
grid_theta = grid_theta,
grid_epsilon = grid_epsilon,
noisy_creature_observation = y_3_noisy_observation,
updated_posterior_df = post_second_update_theta_approx,
alpha_epsilon = 10,
beta_epsilon = 1
) %>%
mutate(update_number = 3)
post_third_update_theta_epsilon_approx <- grid_approximate_creature_with_theta_and_epsilon_continuous(
grid_theta = grid_theta,
grid_epsilon = grid_epsilon,
noisy_creature_observation = y_3_noisy_observation,
updated_posterior_df = post_first_update_theta_approx,
alpha_epsilon = 10,
beta_epsilon = 1
)%>%
mutate(update_number = 3)
three_updates <- bind_rows(two_updates, post_third_update_theta_approx)
test_creature_background_theta <- c(0.2, 0.2, 0.2, 0.8, 0.8, 0.3)
first_update <- post_first_update_theta_approx %>%
mutate(update_number = 1)
second_update <- post_second_update_theta_approx %>%
mutate(update_number = 2)
two_updates <- bind_rows(first_update, second_update)
two_updates %>%
ggplot(aes(x = theta,
y = normalized_log_posterior,
color = update_number)) +
geom_point()+
facet_wrap(~feature_index)
post_third_update_theta_approx <- grid_approximate_creature_with_theta_continuous(
grid_theta = grid_theta,
grid_epsilon = grid_epsilon,
noisy_creature_observation = y_3_noisy_observation,
updated_posterior_df = post_second_update_theta_approx,
alpha_epsilon = 10,
beta_epsilon = 1
) %>%
mutate(update_number = 3)
post_third_update_theta_epsilon_approx <- grid_approximate_creature_with_theta_and_epsilon_continuous(
grid_theta = grid_theta,
grid_epsilon = grid_epsilon,
noisy_creature_observation = y_3_noisy_observation,
updated_posterior_df = post_first_update_theta_approx,
alpha_epsilon = 10,
beta_epsilon = 1
)%>%
mutate(update_number = 3)
three_updates <- bind_rows(two_updates, post_third_update_theta_approx)
three_updates %>%
ggplot(aes(x = theta,
y = normalized_log_posterior,
color = update_number)) +
geom_point()+
facet_wrap(~feature_index)
y_1
y2
y_2
y_3
y_1_noisy_observation
post_second_update_theta_approx
post_second_update_theta_approx %>%
ggplot(aes(x = theta, y = exp(normalized_log_posterior))) +
geom_line() +
facet_wrapa(~feature_index)
post_second_update_theta_approx %>%
ggplot(aes(x = theta, y = exp(normalized_log_posterior))) +
geom_line() +
facet_wrap(~feature_index)
test_creature_background_theta <- c(0.2, 0.2, 0.2, 0.8, 0.8, 0.3)
test_creature_deviant_theta <- c(0.2, 0.8, 0.8, 0.2, 0.2, 0.9)
#test creature
# these will be a block [y_1, y_2, y_3, y_4, z_1, y_5]
y_1 <- sapply(test_creature_background_theta, function(x){rbernoulli(p = x, n = 1)})
y_2 <- sapply(test_creature_background_theta, function(x){rbernoulli(p = x, n = 1)})
y_3 <- sapply(test_creature_background_theta, function(x){rbernoulli(p = x, n = 1)})
y_4 <- sapply(test_creature_background_theta, function(x){rbernoulli(p = x, n = 1)})
z_1 <-  sapply(test_creature_deviant_theta, function(x){rbernoulli(p = x, n = 1)})
#y_5 <- sapply(test_creature_background_theta, function(x){rbernoulli(p = x, n = 1)})
# in each trial collects like 100 times
y_1_noisy_observation <- rbind(noisy_observation_creature(y_1, 50, 0.2))
y_2_noisy_observation <- rbind(noisy_observation_creature(y_2, 50, 0.2))
y_3_noisy_observation <-  rbind(noisy_observation_creature(y_3, 50, 0.2))
y_4_noisy_observation <-  rbind(noisy_observation_creature(y_4, 30, 0.2))
z_1_noisy_observation <-  rbind(noisy_observation_creature(z_1, 30, 0.2))
grid_theta <- seq(0.01, 0.9, 0.05)
grid_epsilon <- seq(0.01, 0.9, 0.05)
post_first_update_theta_approx <- grid_approximate_creature_with_theta_initial(
grid_theta = grid_theta,
grid_epsilon = grid_epsilon,
noisy_creature_observation = y_1_noisy_observation,
alpha_prior = 1,
beta_prior = 1,
alpha_epsilon = 10,
beta_epsilon = 1
)
post_first_update_theta_epsilon_approx <- grid_approximate_creature_with_theta_and_epsilon_initial(
grid_theta = grid_theta,
grid_epsilon = grid_epsilon,
noisy_creature_observation = y_1_noisy_observation,
alpha_prior = 1,
beta_prior = 1,
alpha_epsilon = 10,
beta_epsilon = 1
)
post_first_update_theta_approx
post_first_update_theta_epsilon_approx
post_first_update_theta_epsilon_approx %>%
ggplot(aes(x = theta, y = exp(normalized_log_posterior))) +
geom_line() +
facet_wrap(~feature_index)
View(post_first_update_theta_epsilon_approx)
post_first_update_theta_epsilon_approx %>%
ggplot(aes(x = theta, y = exp(log_posterior))) +
geom_line() +
facet_wrap(~feature_index)
post_first_update_theta_approx %>%
ggplot(aes(x = theta, y = exp(normalized_log_posterior))) +
geom_line() +
facet_wrap(~feature_index)
y_1_noisy_observation
View(post_first_update_theta_approx)
y_1_noisy_observation <- rbind(rep(rep(1, 6), 50))
y_1_noisy_observation
rep(1, 6)
y_1_noisy_observation <- rep(rbind(rep(1, 6), 50))
y_1_noisy_observation <- rep(rbind(rep(1, 6), 50))
y_1_noisy_observation
y_1_noisy_observation <- rbind(noisy_observation_creature(y_1, 50, 0.2))
y_1_noisy_observatio
y_1_noisy_observation <- rbind(noisy_observation_creature(y_1, 50, 00))
y_1_noisy_observation
grid_theta <- seq(0.01, 0.9, 0.05)
grid_epsilon <- seq(0.01, 0.9, 0.05)
post_first_update_theta_approx <- grid_approximate_creature_with_theta_initial(
grid_theta = grid_theta,
grid_epsilon = grid_epsilon,
noisy_creature_observation = y_1_noisy_observation,
alpha_prior = 1,
beta_prior = 1,
alpha_epsilon = 10,
beta_epsilon = 1
)
post_first_update_theta_epsilon_approx <- grid_approximate_creature_with_theta_and_epsilon_initial(
grid_theta = grid_theta,
grid_epsilon = grid_epsilon,
noisy_creature_observation = y_1_noisy_observation,
alpha_prior = 1,
beta_prior = 1,
alpha_epsilon = 10,
beta_epsilon = 1
)
post_first_update_theta_approx
post_first_update_theta_epsilon_approx
post_first_update_theta_approx %>%
ggplot(aes(x = theta, y = exp(normalized_log_posterior))) +
geom_line() +
facet_wrap(~feature_index)
y_1_noisy_observation
grid_theta <- seq(0.01, 0.9, 0.05)
grid_epsilon <- seq(0.01, 0.9, 0.05)
post_first_update_theta_approx <- grid_approximate_creature_with_theta_initial(
grid_theta = grid_theta,
grid_epsilon = grid_epsilon,
noisy_creature_observation = y_1_noisy_observation,
alpha_prior = 1,
beta_prior = 1,
alpha_epsilon = 10,
beta_epsilon = 1
)
post_first_update_theta_epsilon_approx <- grid_approximate_creature_with_theta_and_epsilon_initial(
grid_theta = grid_theta,
grid_epsilon = grid_epsilon,
noisy_creature_observation = y_1_noisy_observation,
alpha_prior = 1,
beta_prior = 1,
alpha_epsilon = 10,
beta_epsilon = 1
)
post_first_update_theta_approx
post_first_update_theta_epsilon_approx
post_first_update_theta_approx
post_first_update_theta_approx %>%
ggplot(aes(x = theta, y = exp(normalized_log_posterior))) +
geom_line() +
facet_wrap(~feature_index)
y_1
z_bar <- y_1_noisy_observation[,1]
z_bar
epsilon = 0
posterior_df <- tibble("theta" = thetas)
posterior_df$unnormalized_log_posterior <- sapply(thetas,
function(x){
lp_theta_given_z(z_bar = z_bar,
theta = x,
epsilon = epsilon,
alpha_theta = alpha_theta,
beta_theta = beta_theta,
alpha_epsilon = alpha_epsilon,
beta_epsilon = beta_epsilon)})
alpha_theta = 10
beta_theta = 10
posterior_df$unnormalized_log_posterior <- sapply(thetas,
function(x){
lp_theta_given_z(z_bar = z_bar,
theta = x,
epsilon = epsilon,
alpha_theta = alpha_theta,
beta_theta = beta_theta,
alpha_epsilon = alpha_epsilon,
beta_epsilon = beta_epsilon)})
posterior_df
posterior_df$unnormalized_log_posterior <- sapply(thetas,
function(x){
lp_theta_given_z(z_bar = z_bar,
theta = x,
epsilon = epsilon,
alpha_theta = alpha_theta,
beta_theta = beta_theta,
alpha_epsilon = alpha_epsilon,
beta_epsilon = beta_epsilon)})
alpha_epsilon = 10
beta_epsilon = 10
beta_epsilon = 1
posterior_df$unnormalized_log_posterior <- sapply(thetas,
function(x){
lp_theta_given_z(z_bar = z_bar,
theta = x,
epsilon = epsilon,
alpha_theta = alpha_theta,
beta_theta = beta_theta,
alpha_epsilon = alpha_epsilon,
beta_epsilon = beta_epsilon)})
posterior_df
theta = 0
theta = 0.2
y_1_noisy_observation <- rbind(noisy_observation_creature(y_1, 50, 0.1))
y_1_noisy_observation
z_bar <- y_1_noisy_observation[,1]
z_bar
thetas <- grid_theta
posterior_df <- tibble("theta" = thetas)
posterior_df$unnormalized_log_posterior <- sapply(thetas,
function(x){
lp_theta_given_z(z_bar = z_bar,
theta = x,
epsilon = epsilon,
alpha_theta = alpha_theta,
beta_theta = beta_theta,
alpha_epsilon = alpha_epsilon,
beta_epsilon = beta_epsilon)})
posterior_df
View(posterior_df)
theta <- .2
epsilon <- .2
lp_theta_given_z(z_bar = z_bar,
theta = x,
epsilon = epsilon,
alpha_theta = alpha_theta,
beta_theta = beta_theta,
alpha_epsilon = alpha_epsilon,
beta_epsilon = beta_epsilon)
x <- .2
lp_theta_given_z(z_bar = z_bar,
theta = x,
epsilon = epsilon,
alpha_theta = alpha_theta,
beta_theta = beta_theta,
alpha_epsilon = alpha_epsilon,
beta_epsilon = beta_epsilon)
lp_theta_given_z(z_bar = z_bar,
theta = x,
epsilon = epsilon,
alpha_theta = alpha_theta,
beta_theta = beta_theta,
alpha_epsilon = alpha_epsilon,
beta_epsilon = beta_epsilon)
sapply(thetas,
function(x){
lp_theta_given_z(z_bar = z_bar,
theta = x,
epsilon = epsilon,
alpha_theta = alpha_theta,
beta_theta = beta_theta,
alpha_epsilon = alpha_epsilon,
beta_epsilon = beta_epsilon)})
posterior_df$unnormalized_log_posterior <- sapply(thetas,
function(x){
lp_theta_given_z(z_bar = z_bar,
theta = x,
epsilon = epsilon,
alpha_theta = alpha_theta,
beta_theta = beta_theta,
alpha_epsilon = alpha_epsilon,
beta_epsilon = beta_epsilon)})
posterior_df
posterior_df$normalized_log_posterior <- posterior_df$unnormalized_log_posterior - matrixStats::logSumExp(posterior_df$unnormalized_log_posterior)
posterior_df
posterior_df %>% ggplot(aes(x = theta, y = normalized_log_posterior)) %>% geom_line()
posterior_df %>% ggplot(aes(x = theta, y = normalized_log_posterior)) + geom_line()
post_first_update_theta_approx <- grid_approximate_creature_with_theta_initial(
grid_theta = grid_theta,
grid_epsilon = grid_epsilon,
noisy_creature_observation = y_1_noisy_observation,
alpha_prior = 1,
beta_prior = 1,
alpha_epsilon = 10,
beta_epsilon = 1
)
View(post_first_update_theta_approx)
post_first_update_theta_approx %>%
ggplot(aes(x = theta, y = normalized_log_posterior)) +
geom_line()
post_first_update_theta_approx %>%
ggplot(aes(x = theta, y = normalized_log_posterior)) +
facet_wrap(~feature_index)
geom_line()
post_first_update_theta_approx %>%
ggplot(aes(x = theta, y = normalized_log_posterior)) +
facet_wrap(~feature_index)+
geom_line()
grid_theta <- seq(0.01, 0.9, 0.05)
grid_epsilon <- seq(0.01, 0.9, 0.05)
post_first_update_theta_approx <- grid_approximate_creature_with_theta_initial(
grid_theta = grid_theta,
grid_epsilon = grid_epsilon,
noisy_creature_observation = y_1_noisy_observation,
alpha_prior = 1,
beta_prior = 1,
alpha_epsilon = 10,
beta_epsilon = 1
)
post_first_update_theta_epsilon_approx <- grid_approximate_creature_with_theta_and_epsilon_initial(
grid_theta = grid_theta,
grid_epsilon = grid_epsilon,
noisy_creature_observation = y_1_noisy_observation,
alpha_prior = 1,
beta_prior = 1,
alpha_epsilon = 10,
beta_epsilon = 1
)
post_first_update_theta_approx
post_first_update_theta_epsilon_approx
post_first_update_theta_approx %>%
ggplot(aes(x = theta, y = normalized_log_posterior)) +
facet_wrap(~feature_index)+
geom_line()
test_creature_background_theta <- c(0.2, 0.2, 0.2, 0.8, 0.8, 0.3)
test_creature_deviant_theta <- c(0.2, 0.8, 0.8, 0.2, 0.2, 0.9)
#test creature
# these will be a block [y_1, y_2, y_3, y_4, z_1, y_5]
y_1 <- sapply(test_creature_background_theta, function(x){rbernoulli(p = x, n = 1)})
y_2 <- sapply(test_creature_background_theta, function(x){rbernoulli(p = x, n = 1)})
y_3 <- sapply(test_creature_background_theta, function(x){rbernoulli(p = x, n = 1)})
y_4 <- sapply(test_creature_background_theta, function(x){rbernoulli(p = x, n = 1)})
z_1 <-  sapply(test_creature_deviant_theta, function(x){rbernoulli(p = x, n = 1)})
#y_5 <- sapply(test_creature_background_theta, function(x){rbernoulli(p = x, n = 1)})
# in each trial collects like 100 times
y_1_noisy_observation <- rbind(noisy_observation_creature(y_1, 500, 0.3))
y_2_noisy_observation <- rbind(noisy_observation_creature(y_2, 50, 0.2))
y_3_noisy_observation <-  rbind(noisy_observation_creature(y_3, 50, 0.2))
y_4_noisy_observation <-  rbind(noisy_observation_creature(y_4, 30, 0.2))
z_1_noisy_observation <-  rbind(noisy_observation_creature(z_1, 30, 0.2))
grid_theta <- seq(0.01, 0.9, 0.05)
grid_epsilon <- seq(0.01, 0.9, 0.05)
post_first_update_theta_approx <- grid_approximate_creature_with_theta_initial(
grid_theta = grid_theta,
grid_epsilon = grid_epsilon,
noisy_creature_observation = y_1_noisy_observation,
alpha_prior = 1,
beta_prior = 1,
alpha_epsilon = 10,
beta_epsilon = 1
)
post_first_update_theta_epsilon_approx <- grid_approximate_creature_with_theta_and_epsilon_initial(
grid_theta = grid_theta,
grid_epsilon = grid_epsilon,
noisy_creature_observation = y_1_noisy_observation,
alpha_prior = 1,
beta_prior = 1,
alpha_epsilon = 10,
beta_epsilon = 1
)
post_first_update_theta_approx
post_first_update_theta_epsilon_approx
post_first_update_theta_approx %>%
ggplot(aes(x = theta, y = normalized_log_posterior)) +
facet_wrap(~feature_index)+
geom_line()
y_1_noisy_observation[,1]
y_1
post_first_update_theta_approx %>%
ggplot(aes(x = theta, y = exp(normalized_log_posterior))) +
geom_line() +
facet_wrap(~feature_index)
post_second_update_theta_approx <- grid_approximate_creature_with_theta_continuous(
grid_theta = grid_theta,
grid_epsilon = grid_epsilon,
noisy_creature_observation = y_2_noisy_observation,
updated_posterior_df = post_first_update_theta_approx,
alpha_epsilon = 10,
beta_epsilon = 1
)
# current having weird issue around 0.1; R refuses to recognize it is there
# leading to weird issue related to log probablity having numeric(0) and problem with normalizing
post_second_update_theta_epsilon_approx <- grid_approximate_creature_with_theta_and_epsilon_continuous(
grid_theta = grid_theta,
grid_epsilon = grid_epsilon,
noisy_creature_observation = y_2_noisy_observation,
updated_posterior_df = post_first_update_theta_approx,
alpha_epsilon = 10,
beta_epsilon = 1
)
posterior_df
sum(exp(posterior_df$normalized_log_posterior))
-log(lp_theta)
lp_theta
thetas
lp_thetas
lp_thetas <- new_prior_df$normalized_log_posterior
new_prior_df <- post_first_update_theta_approx
thetas <- new_prior_df$theta
thetas
lp_thetas
lp_thetas <- new_prior_df$normalized_log_posterior
lp_thetas
new_prior_df
